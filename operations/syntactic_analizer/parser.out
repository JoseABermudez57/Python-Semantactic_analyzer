Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> BLOCK_CODE
Rule 2     BLOCK_CODE -> GV
Rule 3     BLOCK_CODE -> GC
Rule 4     BLOCK_CODE -> GF
Rule 5     BLOCK_CODE -> GCF
Rule 6     BLOCK_CODE -> PRINT
Rule 7     BLOCK_CODE -> EMPTY
Rule 8     C -> GV
Rule 9     C -> GC
Rule 10    C -> GCF
Rule 11    C -> PRINT
Rule 12    C -> EMPTY
Rule 13    GV -> TD V I VA BLOCK_CODE
Rule 14    GV -> TD V BLOCK_CODE
Rule 15    GV -> EMPTY
Rule 16    TD -> INTEGER_TYPE
Rule 17    TD -> BOOLEAN_TYPE
Rule 18    TD -> DECIMAL_TYPE
Rule 19    TD -> STRING_TYPE
Rule 20    V -> VARIABLE
Rule 21    I -> ASSIGNMENT
Rule 22    VA -> NUMBER
Rule 23    VA -> NUMBER DOT NUMBER
Rule 24    VA -> TRUE_VALUE
Rule 25    VA -> FALSE_VALUE
Rule 26    VA -> QUOTATION_MARKS V QUOTATION_MARKS
Rule 27    GC -> CN PA CD PC MY C MN BLOCK_CODE
Rule 28    GC -> CN PA CD PC MY MN BLOCK_CODE
Rule 29    GC -> EMPTY
Rule 30    CN -> IF
Rule 31    CD -> V S V
Rule 32    CD -> V S VA
Rule 33    CD -> VA S V
Rule 34    CD -> VA S VA
Rule 35    S -> EQUAL
Rule 36    S -> GREATER_THAN
Rule 37    S -> LESS_THAN
Rule 38    S -> GREATER_OR_EQUAL
Rule 39    S -> LESS_OR_EQUAL
Rule 40    S -> NOT_EQUAL
Rule 41    GF -> TD V ME PR MA MY C RT MN BLOCK_CODE
Rule 42    GF -> V ME PR MA MY C MN BLOCK_CODE
Rule 43    GF -> TD V ME PR MA MY RT MN BLOCK_CODE
Rule 44    GF -> V ME PR MA MY MN BLOCK_CODE
Rule 45    GF -> TD V ME MA MY C RT MN BLOCK_CODE
Rule 46    GF -> V ME MA MY C MN BLOCK_CODE
Rule 47    GF -> TD V ME MA MY RT MN BLOCK_CODE
Rule 48    GF -> V ME MA MY MN BLOCK_CODE
Rule 49    GF -> EMPTY
Rule 50    PR -> V
Rule 51    ME -> LESS_THAN
Rule 52    MA -> GREATER_THAN
Rule 53    RT -> RETURN V
Rule 54    GCF -> F PA CDF PC MY C MN BLOCK_CODE
Rule 55    GCF -> F PA CDF PC MY MN BLOCK_CODE
Rule 56    GCF -> EMPTY
Rule 57    F -> FOR
Rule 58    CDF -> NUMBER SE NUMBER SE O
Rule 59    SE -> PIPE
Rule 60    O -> SUBTRACTION
Rule 61    O -> ADDITION
Rule 62    PA -> PARENTHESIS_OPEN
Rule 63    PC -> PARENTHESIS_CLOSE
Rule 64    MY -> OPEN_BODY
Rule 65    MN -> LESS_OR_EQUAL
Rule 66    PRINT -> KUNAI MY V MN BLOCK_CODE
Rule 67    PRINT -> KUNAI MY VA MN BLOCK_CODE
Rule 68    PRINT -> KUNAI MY CD MN BLOCK_CODE
Rule 69    PRINT -> EMPTY
Rule 70    EMPTY -> <empty>

Terminals, with rules where they appear

ADDITION             : 61
ASSIGNMENT           : 21
BOOLEAN_TYPE         : 17
DECIMAL_TYPE         : 18
DOT                  : 23
EQUAL                : 35
FALSE_VALUE          : 25
FOR                  : 57
GREATER_OR_EQUAL     : 38
GREATER_THAN         : 36 52
IF                   : 30
INTEGER_TYPE         : 16
KUNAI                : 66 67 68
LESS_OR_EQUAL        : 39 65
LESS_THAN            : 37 51
NOT_EQUAL            : 40
NUMBER               : 22 23 23 58 58
OPEN_BODY            : 64
PARENTHESIS_CLOSE    : 63
PARENTHESIS_OPEN     : 62
PIPE                 : 59
QUOTATION_MARKS      : 26 26
RETURN               : 53
STRING_TYPE          : 19
SUBTRACTION          : 60
TRUE_VALUE           : 24
VARIABLE             : 20
error                : 

Nonterminals, with rules where they appear

BLOCK_CODE           : 1 13 14 27 28 41 42 43 44 45 46 47 48 54 55 66 67 68
C                    : 27 41 42 45 46 54
CD                   : 27 28 68
CDF                  : 54 55
CN                   : 27 28
EMPTY                : 7 12 15 29 49 56 69
F                    : 54 55
GC                   : 3 9
GCF                  : 5 10
GF                   : 4
GV                   : 2 8
I                    : 13
MA                   : 41 42 43 44 45 46 47 48
ME                   : 41 42 43 44 45 46 47 48
MN                   : 27 28 41 42 43 44 45 46 47 48 54 55 66 67 68
MY                   : 27 28 41 42 43 44 45 46 47 48 54 55 66 67 68
O                    : 58
PA                   : 27 28 54 55
PC                   : 27 28 54 55
PR                   : 41 42 43 44
PRINT                : 6 11
PROGRAM              : 0
RT                   : 41 43 45 47
S                    : 31 32 33 34
SE                   : 58 58
TD                   : 13 14 41 43 45 47
V                    : 13 14 26 31 31 32 33 41 42 43 44 45 46 47 48 50 53 66
VA                   : 13 32 33 34 34 67

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    PROGRAM                        shift and go to state 1
    BLOCK_CODE                     shift and go to state 2
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> BLOCK_CODE .

    $end            reduce using rule 1 (PROGRAM -> BLOCK_CODE .)


state 3

    (2) BLOCK_CODE -> GV .

    $end            reduce using rule 2 (BLOCK_CODE -> GV .)
    LESS_OR_EQUAL   reduce using rule 2 (BLOCK_CODE -> GV .)
    RETURN          reduce using rule 2 (BLOCK_CODE -> GV .)


state 4

    (3) BLOCK_CODE -> GC .

    $end            reduce using rule 3 (BLOCK_CODE -> GC .)
    LESS_OR_EQUAL   reduce using rule 3 (BLOCK_CODE -> GC .)
    RETURN          reduce using rule 3 (BLOCK_CODE -> GC .)


state 5

    (4) BLOCK_CODE -> GF .

    $end            reduce using rule 4 (BLOCK_CODE -> GF .)
    LESS_OR_EQUAL   reduce using rule 4 (BLOCK_CODE -> GF .)
    RETURN          reduce using rule 4 (BLOCK_CODE -> GF .)


state 6

    (5) BLOCK_CODE -> GCF .

    $end            reduce using rule 5 (BLOCK_CODE -> GCF .)
    LESS_OR_EQUAL   reduce using rule 5 (BLOCK_CODE -> GCF .)
    RETURN          reduce using rule 5 (BLOCK_CODE -> GCF .)


state 7

    (6) BLOCK_CODE -> PRINT .

    $end            reduce using rule 6 (BLOCK_CODE -> PRINT .)
    LESS_OR_EQUAL   reduce using rule 6 (BLOCK_CODE -> PRINT .)
    RETURN          reduce using rule 6 (BLOCK_CODE -> PRINT .)


state 8

    (7) BLOCK_CODE -> EMPTY .
    (15) GV -> EMPTY .
    (29) GC -> EMPTY .
    (49) GF -> EMPTY .
    (56) GCF -> EMPTY .
    (69) PRINT -> EMPTY .

  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
    $end            reduce using rule 7 (BLOCK_CODE -> EMPTY .)
    LESS_OR_EQUAL   reduce using rule 7 (BLOCK_CODE -> EMPTY .)
    RETURN          reduce using rule 7 (BLOCK_CODE -> EMPTY .)

  ! $end            [ reduce using rule 15 (GV -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 15 (GV -> EMPTY .) ]
  ! RETURN          [ reduce using rule 15 (GV -> EMPTY .) ]
  ! $end            [ reduce using rule 29 (GC -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 29 (GC -> EMPTY .) ]
  ! RETURN          [ reduce using rule 29 (GC -> EMPTY .) ]
  ! $end            [ reduce using rule 49 (GF -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 49 (GF -> EMPTY .) ]
  ! RETURN          [ reduce using rule 49 (GF -> EMPTY .) ]
  ! $end            [ reduce using rule 56 (GCF -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 56 (GCF -> EMPTY .) ]
  ! RETURN          [ reduce using rule 56 (GCF -> EMPTY .) ]
  ! $end            [ reduce using rule 69 (PRINT -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 69 (PRINT -> EMPTY .) ]
  ! RETURN          [ reduce using rule 69 (PRINT -> EMPTY .) ]


state 9

    (13) GV -> TD . V I VA BLOCK_CODE
    (14) GV -> TD . V BLOCK_CODE
    (41) GF -> TD . V ME PR MA MY C RT MN BLOCK_CODE
    (43) GF -> TD . V ME PR MA MY RT MN BLOCK_CODE
    (45) GF -> TD . V ME MA MY C RT MN BLOCK_CODE
    (47) GF -> TD . V ME MA MY RT MN BLOCK_CODE
    (20) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 21

state 10

    (42) GF -> V . ME PR MA MY C MN BLOCK_CODE
    (44) GF -> V . ME PR MA MY MN BLOCK_CODE
    (46) GF -> V . ME MA MY C MN BLOCK_CODE
    (48) GF -> V . ME MA MY MN BLOCK_CODE
    (51) ME -> . LESS_THAN

    LESS_THAN       shift and go to state 23

    ME                             shift and go to state 22

state 11

    (27) GC -> CN . PA CD PC MY C MN BLOCK_CODE
    (28) GC -> CN . PA CD PC MY MN BLOCK_CODE
    (62) PA -> . PARENTHESIS_OPEN

    PARENTHESIS_OPEN shift and go to state 25

    PA                             shift and go to state 24

state 12

    (54) GCF -> F . PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> F . PA CDF PC MY MN BLOCK_CODE
    (62) PA -> . PARENTHESIS_OPEN

    PARENTHESIS_OPEN shift and go to state 25

    PA                             shift and go to state 26

state 13

    (66) PRINT -> KUNAI . MY V MN BLOCK_CODE
    (67) PRINT -> KUNAI . MY VA MN BLOCK_CODE
    (68) PRINT -> KUNAI . MY CD MN BLOCK_CODE
    (64) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 28

    MY                             shift and go to state 27

state 14

    (16) TD -> INTEGER_TYPE .

    VARIABLE        reduce using rule 16 (TD -> INTEGER_TYPE .)


state 15

    (17) TD -> BOOLEAN_TYPE .

    VARIABLE        reduce using rule 17 (TD -> BOOLEAN_TYPE .)


state 16

    (18) TD -> DECIMAL_TYPE .

    VARIABLE        reduce using rule 18 (TD -> DECIMAL_TYPE .)


state 17

    (19) TD -> STRING_TYPE .

    VARIABLE        reduce using rule 19 (TD -> STRING_TYPE .)


state 18

    (30) CN -> IF .

    PARENTHESIS_OPEN reduce using rule 30 (CN -> IF .)


state 19

    (20) V -> VARIABLE .

    LESS_THAN       reduce using rule 20 (V -> VARIABLE .)
    ASSIGNMENT      reduce using rule 20 (V -> VARIABLE .)
    KUNAI           reduce using rule 20 (V -> VARIABLE .)
    INTEGER_TYPE    reduce using rule 20 (V -> VARIABLE .)
    BOOLEAN_TYPE    reduce using rule 20 (V -> VARIABLE .)
    DECIMAL_TYPE    reduce using rule 20 (V -> VARIABLE .)
    STRING_TYPE     reduce using rule 20 (V -> VARIABLE .)
    IF              reduce using rule 20 (V -> VARIABLE .)
    VARIABLE        reduce using rule 20 (V -> VARIABLE .)
    FOR             reduce using rule 20 (V -> VARIABLE .)
    $end            reduce using rule 20 (V -> VARIABLE .)
    LESS_OR_EQUAL   reduce using rule 20 (V -> VARIABLE .)
    RETURN          reduce using rule 20 (V -> VARIABLE .)
    GREATER_THAN    reduce using rule 20 (V -> VARIABLE .)
    EQUAL           reduce using rule 20 (V -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 20 (V -> VARIABLE .)
    NOT_EQUAL       reduce using rule 20 (V -> VARIABLE .)
    QUOTATION_MARKS reduce using rule 20 (V -> VARIABLE .)
    PARENTHESIS_CLOSE reduce using rule 20 (V -> VARIABLE .)


state 20

    (57) F -> FOR .

    PARENTHESIS_OPEN reduce using rule 57 (F -> FOR .)


state 21

    (13) GV -> TD V . I VA BLOCK_CODE
    (14) GV -> TD V . BLOCK_CODE
    (41) GF -> TD V . ME PR MA MY C RT MN BLOCK_CODE
    (43) GF -> TD V . ME PR MA MY RT MN BLOCK_CODE
    (45) GF -> TD V . ME MA MY C RT MN BLOCK_CODE
    (47) GF -> TD V . ME MA MY RT MN BLOCK_CODE
    (21) I -> . ASSIGNMENT
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (51) ME -> . LESS_THAN
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    ASSIGNMENT      shift and go to state 32
    LESS_THAN       shift and go to state 23
    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    I                              shift and go to state 29
    BLOCK_CODE                     shift and go to state 30
    ME                             shift and go to state 31
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 22

    (42) GF -> V ME . PR MA MY C MN BLOCK_CODE
    (44) GF -> V ME . PR MA MY MN BLOCK_CODE
    (46) GF -> V ME . MA MY C MN BLOCK_CODE
    (48) GF -> V ME . MA MY MN BLOCK_CODE
    (50) PR -> . V
    (52) MA -> . GREATER_THAN
    (20) V -> . VARIABLE

    GREATER_THAN    shift and go to state 36
    VARIABLE        shift and go to state 19

    V                              shift and go to state 33
    PR                             shift and go to state 34
    MA                             shift and go to state 35

state 23

    (51) ME -> LESS_THAN .

    GREATER_THAN    reduce using rule 51 (ME -> LESS_THAN .)
    VARIABLE        reduce using rule 51 (ME -> LESS_THAN .)


state 24

    (27) GC -> CN PA . CD PC MY C MN BLOCK_CODE
    (28) GC -> CN PA . CD PC MY MN BLOCK_CODE
    (31) CD -> . V S V
    (32) CD -> . V S VA
    (33) CD -> . VA S V
    (34) CD -> . VA S VA
    (20) V -> . VARIABLE
    (22) VA -> . NUMBER
    (23) VA -> . NUMBER DOT NUMBER
    (24) VA -> . TRUE_VALUE
    (25) VA -> . FALSE_VALUE
    (26) VA -> . QUOTATION_MARKS V QUOTATION_MARKS

    VARIABLE        shift and go to state 19
    NUMBER          shift and go to state 40
    TRUE_VALUE      shift and go to state 41
    FALSE_VALUE     shift and go to state 42
    QUOTATION_MARKS shift and go to state 43

    CD                             shift and go to state 37
    V                              shift and go to state 38
    VA                             shift and go to state 39

state 25

    (62) PA -> PARENTHESIS_OPEN .

    VARIABLE        reduce using rule 62 (PA -> PARENTHESIS_OPEN .)
    NUMBER          reduce using rule 62 (PA -> PARENTHESIS_OPEN .)
    TRUE_VALUE      reduce using rule 62 (PA -> PARENTHESIS_OPEN .)
    FALSE_VALUE     reduce using rule 62 (PA -> PARENTHESIS_OPEN .)
    QUOTATION_MARKS reduce using rule 62 (PA -> PARENTHESIS_OPEN .)


state 26

    (54) GCF -> F PA . CDF PC MY C MN BLOCK_CODE
    (55) GCF -> F PA . CDF PC MY MN BLOCK_CODE
    (58) CDF -> . NUMBER SE NUMBER SE O

    NUMBER          shift and go to state 45

    CDF                            shift and go to state 44

state 27

    (66) PRINT -> KUNAI MY . V MN BLOCK_CODE
    (67) PRINT -> KUNAI MY . VA MN BLOCK_CODE
    (68) PRINT -> KUNAI MY . CD MN BLOCK_CODE
    (20) V -> . VARIABLE
    (22) VA -> . NUMBER
    (23) VA -> . NUMBER DOT NUMBER
    (24) VA -> . TRUE_VALUE
    (25) VA -> . FALSE_VALUE
    (26) VA -> . QUOTATION_MARKS V QUOTATION_MARKS
    (31) CD -> . V S V
    (32) CD -> . V S VA
    (33) CD -> . VA S V
    (34) CD -> . VA S VA

    VARIABLE        shift and go to state 19
    NUMBER          shift and go to state 40
    TRUE_VALUE      shift and go to state 41
    FALSE_VALUE     shift and go to state 42
    QUOTATION_MARKS shift and go to state 43

    V                              shift and go to state 46
    VA                             shift and go to state 47
    CD                             shift and go to state 48

state 28

    (64) MY -> OPEN_BODY .

    VARIABLE        reduce using rule 64 (MY -> OPEN_BODY .)
    NUMBER          reduce using rule 64 (MY -> OPEN_BODY .)
    TRUE_VALUE      reduce using rule 64 (MY -> OPEN_BODY .)
    FALSE_VALUE     reduce using rule 64 (MY -> OPEN_BODY .)
    QUOTATION_MARKS reduce using rule 64 (MY -> OPEN_BODY .)
    LESS_OR_EQUAL   reduce using rule 64 (MY -> OPEN_BODY .)
    KUNAI           reduce using rule 64 (MY -> OPEN_BODY .)
    INTEGER_TYPE    reduce using rule 64 (MY -> OPEN_BODY .)
    BOOLEAN_TYPE    reduce using rule 64 (MY -> OPEN_BODY .)
    DECIMAL_TYPE    reduce using rule 64 (MY -> OPEN_BODY .)
    STRING_TYPE     reduce using rule 64 (MY -> OPEN_BODY .)
    IF              reduce using rule 64 (MY -> OPEN_BODY .)
    FOR             reduce using rule 64 (MY -> OPEN_BODY .)
    RETURN          reduce using rule 64 (MY -> OPEN_BODY .)


state 29

    (13) GV -> TD V I . VA BLOCK_CODE
    (22) VA -> . NUMBER
    (23) VA -> . NUMBER DOT NUMBER
    (24) VA -> . TRUE_VALUE
    (25) VA -> . FALSE_VALUE
    (26) VA -> . QUOTATION_MARKS V QUOTATION_MARKS

    NUMBER          shift and go to state 40
    TRUE_VALUE      shift and go to state 41
    FALSE_VALUE     shift and go to state 42
    QUOTATION_MARKS shift and go to state 43

    VA                             shift and go to state 49

state 30

    (14) GV -> TD V BLOCK_CODE .

    $end            reduce using rule 14 (GV -> TD V BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 14 (GV -> TD V BLOCK_CODE .)
    RETURN          reduce using rule 14 (GV -> TD V BLOCK_CODE .)


state 31

    (41) GF -> TD V ME . PR MA MY C RT MN BLOCK_CODE
    (43) GF -> TD V ME . PR MA MY RT MN BLOCK_CODE
    (45) GF -> TD V ME . MA MY C RT MN BLOCK_CODE
    (47) GF -> TD V ME . MA MY RT MN BLOCK_CODE
    (50) PR -> . V
    (52) MA -> . GREATER_THAN
    (20) V -> . VARIABLE

    GREATER_THAN    shift and go to state 36
    VARIABLE        shift and go to state 19

    V                              shift and go to state 33
    PR                             shift and go to state 50
    MA                             shift and go to state 51

state 32

    (21) I -> ASSIGNMENT .

    NUMBER          reduce using rule 21 (I -> ASSIGNMENT .)
    TRUE_VALUE      reduce using rule 21 (I -> ASSIGNMENT .)
    FALSE_VALUE     reduce using rule 21 (I -> ASSIGNMENT .)
    QUOTATION_MARKS reduce using rule 21 (I -> ASSIGNMENT .)


state 33

    (50) PR -> V .

    GREATER_THAN    reduce using rule 50 (PR -> V .)


state 34

    (42) GF -> V ME PR . MA MY C MN BLOCK_CODE
    (44) GF -> V ME PR . MA MY MN BLOCK_CODE
    (52) MA -> . GREATER_THAN

    GREATER_THAN    shift and go to state 36

    MA                             shift and go to state 52

state 35

    (46) GF -> V ME MA . MY C MN BLOCK_CODE
    (48) GF -> V ME MA . MY MN BLOCK_CODE
    (64) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 28

    MY                             shift and go to state 53

state 36

    (52) MA -> GREATER_THAN .

    OPEN_BODY       reduce using rule 52 (MA -> GREATER_THAN .)


state 37

    (27) GC -> CN PA CD . PC MY C MN BLOCK_CODE
    (28) GC -> CN PA CD . PC MY MN BLOCK_CODE
    (63) PC -> . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE shift and go to state 55

    PC                             shift and go to state 54

state 38

    (31) CD -> V . S V
    (32) CD -> V . S VA
    (35) S -> . EQUAL
    (36) S -> . GREATER_THAN
    (37) S -> . LESS_THAN
    (38) S -> . GREATER_OR_EQUAL
    (39) S -> . LESS_OR_EQUAL
    (40) S -> . NOT_EQUAL

    EQUAL           shift and go to state 57
    GREATER_THAN    shift and go to state 58
    LESS_THAN       shift and go to state 59
    GREATER_OR_EQUAL shift and go to state 60
    LESS_OR_EQUAL   shift and go to state 61
    NOT_EQUAL       shift and go to state 62

    S                              shift and go to state 56

state 39

    (33) CD -> VA . S V
    (34) CD -> VA . S VA
    (35) S -> . EQUAL
    (36) S -> . GREATER_THAN
    (37) S -> . LESS_THAN
    (38) S -> . GREATER_OR_EQUAL
    (39) S -> . LESS_OR_EQUAL
    (40) S -> . NOT_EQUAL

    EQUAL           shift and go to state 57
    GREATER_THAN    shift and go to state 58
    LESS_THAN       shift and go to state 59
    GREATER_OR_EQUAL shift and go to state 60
    LESS_OR_EQUAL   shift and go to state 61
    NOT_EQUAL       shift and go to state 62

    S                              shift and go to state 63

state 40

    (22) VA -> NUMBER .
    (23) VA -> NUMBER . DOT NUMBER

    EQUAL           reduce using rule 22 (VA -> NUMBER .)
    GREATER_THAN    reduce using rule 22 (VA -> NUMBER .)
    LESS_THAN       reduce using rule 22 (VA -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 22 (VA -> NUMBER .)
    LESS_OR_EQUAL   reduce using rule 22 (VA -> NUMBER .)
    NOT_EQUAL       reduce using rule 22 (VA -> NUMBER .)
    KUNAI           reduce using rule 22 (VA -> NUMBER .)
    INTEGER_TYPE    reduce using rule 22 (VA -> NUMBER .)
    BOOLEAN_TYPE    reduce using rule 22 (VA -> NUMBER .)
    DECIMAL_TYPE    reduce using rule 22 (VA -> NUMBER .)
    STRING_TYPE     reduce using rule 22 (VA -> NUMBER .)
    IF              reduce using rule 22 (VA -> NUMBER .)
    VARIABLE        reduce using rule 22 (VA -> NUMBER .)
    FOR             reduce using rule 22 (VA -> NUMBER .)
    $end            reduce using rule 22 (VA -> NUMBER .)
    RETURN          reduce using rule 22 (VA -> NUMBER .)
    PARENTHESIS_CLOSE reduce using rule 22 (VA -> NUMBER .)
    DOT             shift and go to state 64


state 41

    (24) VA -> TRUE_VALUE .

    EQUAL           reduce using rule 24 (VA -> TRUE_VALUE .)
    GREATER_THAN    reduce using rule 24 (VA -> TRUE_VALUE .)
    LESS_THAN       reduce using rule 24 (VA -> TRUE_VALUE .)
    GREATER_OR_EQUAL reduce using rule 24 (VA -> TRUE_VALUE .)
    LESS_OR_EQUAL   reduce using rule 24 (VA -> TRUE_VALUE .)
    NOT_EQUAL       reduce using rule 24 (VA -> TRUE_VALUE .)
    KUNAI           reduce using rule 24 (VA -> TRUE_VALUE .)
    INTEGER_TYPE    reduce using rule 24 (VA -> TRUE_VALUE .)
    BOOLEAN_TYPE    reduce using rule 24 (VA -> TRUE_VALUE .)
    DECIMAL_TYPE    reduce using rule 24 (VA -> TRUE_VALUE .)
    STRING_TYPE     reduce using rule 24 (VA -> TRUE_VALUE .)
    IF              reduce using rule 24 (VA -> TRUE_VALUE .)
    VARIABLE        reduce using rule 24 (VA -> TRUE_VALUE .)
    FOR             reduce using rule 24 (VA -> TRUE_VALUE .)
    $end            reduce using rule 24 (VA -> TRUE_VALUE .)
    RETURN          reduce using rule 24 (VA -> TRUE_VALUE .)
    PARENTHESIS_CLOSE reduce using rule 24 (VA -> TRUE_VALUE .)


state 42

    (25) VA -> FALSE_VALUE .

    EQUAL           reduce using rule 25 (VA -> FALSE_VALUE .)
    GREATER_THAN    reduce using rule 25 (VA -> FALSE_VALUE .)
    LESS_THAN       reduce using rule 25 (VA -> FALSE_VALUE .)
    GREATER_OR_EQUAL reduce using rule 25 (VA -> FALSE_VALUE .)
    LESS_OR_EQUAL   reduce using rule 25 (VA -> FALSE_VALUE .)
    NOT_EQUAL       reduce using rule 25 (VA -> FALSE_VALUE .)
    KUNAI           reduce using rule 25 (VA -> FALSE_VALUE .)
    INTEGER_TYPE    reduce using rule 25 (VA -> FALSE_VALUE .)
    BOOLEAN_TYPE    reduce using rule 25 (VA -> FALSE_VALUE .)
    DECIMAL_TYPE    reduce using rule 25 (VA -> FALSE_VALUE .)
    STRING_TYPE     reduce using rule 25 (VA -> FALSE_VALUE .)
    IF              reduce using rule 25 (VA -> FALSE_VALUE .)
    VARIABLE        reduce using rule 25 (VA -> FALSE_VALUE .)
    FOR             reduce using rule 25 (VA -> FALSE_VALUE .)
    $end            reduce using rule 25 (VA -> FALSE_VALUE .)
    RETURN          reduce using rule 25 (VA -> FALSE_VALUE .)
    PARENTHESIS_CLOSE reduce using rule 25 (VA -> FALSE_VALUE .)


state 43

    (26) VA -> QUOTATION_MARKS . V QUOTATION_MARKS
    (20) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 65

state 44

    (54) GCF -> F PA CDF . PC MY C MN BLOCK_CODE
    (55) GCF -> F PA CDF . PC MY MN BLOCK_CODE
    (63) PC -> . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE shift and go to state 55

    PC                             shift and go to state 66

state 45

    (58) CDF -> NUMBER . SE NUMBER SE O
    (59) SE -> . PIPE

    PIPE            shift and go to state 68

    SE                             shift and go to state 67

state 46

    (66) PRINT -> KUNAI MY V . MN BLOCK_CODE
    (31) CD -> V . S V
    (32) CD -> V . S VA
    (65) MN -> . LESS_OR_EQUAL
    (35) S -> . EQUAL
    (36) S -> . GREATER_THAN
    (37) S -> . LESS_THAN
    (38) S -> . GREATER_OR_EQUAL
    (39) S -> . LESS_OR_EQUAL
    (40) S -> . NOT_EQUAL

    LESS_OR_EQUAL   shift and go to state 70
    EQUAL           shift and go to state 57
    GREATER_THAN    shift and go to state 58
    LESS_THAN       shift and go to state 59
    GREATER_OR_EQUAL shift and go to state 60
    NOT_EQUAL       shift and go to state 62

    MN                             shift and go to state 69
    S                              shift and go to state 56

state 47

    (67) PRINT -> KUNAI MY VA . MN BLOCK_CODE
    (33) CD -> VA . S V
    (34) CD -> VA . S VA
    (65) MN -> . LESS_OR_EQUAL
    (35) S -> . EQUAL
    (36) S -> . GREATER_THAN
    (37) S -> . LESS_THAN
    (38) S -> . GREATER_OR_EQUAL
    (39) S -> . LESS_OR_EQUAL
    (40) S -> . NOT_EQUAL

    LESS_OR_EQUAL   shift and go to state 70
    EQUAL           shift and go to state 57
    GREATER_THAN    shift and go to state 58
    LESS_THAN       shift and go to state 59
    GREATER_OR_EQUAL shift and go to state 60
    NOT_EQUAL       shift and go to state 62

    MN                             shift and go to state 71
    S                              shift and go to state 63

state 48

    (68) PRINT -> KUNAI MY CD . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 72

state 49

    (13) GV -> TD V I VA . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 74
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 50

    (41) GF -> TD V ME PR . MA MY C RT MN BLOCK_CODE
    (43) GF -> TD V ME PR . MA MY RT MN BLOCK_CODE
    (52) MA -> . GREATER_THAN

    GREATER_THAN    shift and go to state 36

    MA                             shift and go to state 75

state 51

    (45) GF -> TD V ME MA . MY C RT MN BLOCK_CODE
    (47) GF -> TD V ME MA . MY RT MN BLOCK_CODE
    (64) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 28

    MY                             shift and go to state 76

state 52

    (42) GF -> V ME PR MA . MY C MN BLOCK_CODE
    (44) GF -> V ME PR MA . MY MN BLOCK_CODE
    (64) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 28

    MY                             shift and go to state 77

state 53

    (46) GF -> V ME MA MY . C MN BLOCK_CODE
    (48) GF -> V ME MA MY . MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (65) MN -> . LESS_OR_EQUAL
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (57) F -> . FOR

  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
    LESS_OR_EQUAL   shift and go to state 73
    KUNAI           shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! LESS_OR_EQUAL   [ reduce using rule 70 (EMPTY -> .) ]

    C                              shift and go to state 78
    MN                             shift and go to state 79
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    TD                             shift and go to state 85
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 54

    (27) GC -> CN PA CD PC . MY C MN BLOCK_CODE
    (28) GC -> CN PA CD PC . MY MN BLOCK_CODE
    (64) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 28

    MY                             shift and go to state 86

state 55

    (63) PC -> PARENTHESIS_CLOSE .

    OPEN_BODY       reduce using rule 63 (PC -> PARENTHESIS_CLOSE .)


state 56

    (31) CD -> V S . V
    (32) CD -> V S . VA
    (20) V -> . VARIABLE
    (22) VA -> . NUMBER
    (23) VA -> . NUMBER DOT NUMBER
    (24) VA -> . TRUE_VALUE
    (25) VA -> . FALSE_VALUE
    (26) VA -> . QUOTATION_MARKS V QUOTATION_MARKS

    VARIABLE        shift and go to state 19
    NUMBER          shift and go to state 40
    TRUE_VALUE      shift and go to state 41
    FALSE_VALUE     shift and go to state 42
    QUOTATION_MARKS shift and go to state 43

    V                              shift and go to state 87
    VA                             shift and go to state 88

state 57

    (35) S -> EQUAL .

    VARIABLE        reduce using rule 35 (S -> EQUAL .)
    NUMBER          reduce using rule 35 (S -> EQUAL .)
    TRUE_VALUE      reduce using rule 35 (S -> EQUAL .)
    FALSE_VALUE     reduce using rule 35 (S -> EQUAL .)
    QUOTATION_MARKS reduce using rule 35 (S -> EQUAL .)


state 58

    (36) S -> GREATER_THAN .

    VARIABLE        reduce using rule 36 (S -> GREATER_THAN .)
    NUMBER          reduce using rule 36 (S -> GREATER_THAN .)
    TRUE_VALUE      reduce using rule 36 (S -> GREATER_THAN .)
    FALSE_VALUE     reduce using rule 36 (S -> GREATER_THAN .)
    QUOTATION_MARKS reduce using rule 36 (S -> GREATER_THAN .)


state 59

    (37) S -> LESS_THAN .

    VARIABLE        reduce using rule 37 (S -> LESS_THAN .)
    NUMBER          reduce using rule 37 (S -> LESS_THAN .)
    TRUE_VALUE      reduce using rule 37 (S -> LESS_THAN .)
    FALSE_VALUE     reduce using rule 37 (S -> LESS_THAN .)
    QUOTATION_MARKS reduce using rule 37 (S -> LESS_THAN .)


state 60

    (38) S -> GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 38 (S -> GREATER_OR_EQUAL .)
    NUMBER          reduce using rule 38 (S -> GREATER_OR_EQUAL .)
    TRUE_VALUE      reduce using rule 38 (S -> GREATER_OR_EQUAL .)
    FALSE_VALUE     reduce using rule 38 (S -> GREATER_OR_EQUAL .)
    QUOTATION_MARKS reduce using rule 38 (S -> GREATER_OR_EQUAL .)


state 61

    (39) S -> LESS_OR_EQUAL .

    VARIABLE        reduce using rule 39 (S -> LESS_OR_EQUAL .)
    NUMBER          reduce using rule 39 (S -> LESS_OR_EQUAL .)
    TRUE_VALUE      reduce using rule 39 (S -> LESS_OR_EQUAL .)
    FALSE_VALUE     reduce using rule 39 (S -> LESS_OR_EQUAL .)
    QUOTATION_MARKS reduce using rule 39 (S -> LESS_OR_EQUAL .)


state 62

    (40) S -> NOT_EQUAL .

    VARIABLE        reduce using rule 40 (S -> NOT_EQUAL .)
    NUMBER          reduce using rule 40 (S -> NOT_EQUAL .)
    TRUE_VALUE      reduce using rule 40 (S -> NOT_EQUAL .)
    FALSE_VALUE     reduce using rule 40 (S -> NOT_EQUAL .)
    QUOTATION_MARKS reduce using rule 40 (S -> NOT_EQUAL .)


state 63

    (33) CD -> VA S . V
    (34) CD -> VA S . VA
    (20) V -> . VARIABLE
    (22) VA -> . NUMBER
    (23) VA -> . NUMBER DOT NUMBER
    (24) VA -> . TRUE_VALUE
    (25) VA -> . FALSE_VALUE
    (26) VA -> . QUOTATION_MARKS V QUOTATION_MARKS

    VARIABLE        shift and go to state 19
    NUMBER          shift and go to state 40
    TRUE_VALUE      shift and go to state 41
    FALSE_VALUE     shift and go to state 42
    QUOTATION_MARKS shift and go to state 43

    VA                             shift and go to state 89
    V                              shift and go to state 90

state 64

    (23) VA -> NUMBER DOT . NUMBER

    NUMBER          shift and go to state 91


state 65

    (26) VA -> QUOTATION_MARKS V . QUOTATION_MARKS

    QUOTATION_MARKS shift and go to state 92


state 66

    (54) GCF -> F PA CDF PC . MY C MN BLOCK_CODE
    (55) GCF -> F PA CDF PC . MY MN BLOCK_CODE
    (64) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 28

    MY                             shift and go to state 93

state 67

    (58) CDF -> NUMBER SE . NUMBER SE O

    NUMBER          shift and go to state 94


state 68

    (59) SE -> PIPE .

    NUMBER          reduce using rule 59 (SE -> PIPE .)
    SUBTRACTION     reduce using rule 59 (SE -> PIPE .)
    ADDITION        reduce using rule 59 (SE -> PIPE .)


state 69

    (66) PRINT -> KUNAI MY V MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 95
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 70

    (65) MN -> LESS_OR_EQUAL .
    (39) S -> LESS_OR_EQUAL .

  ! reduce/reduce conflict for VARIABLE resolved using rule 39 (S -> LESS_OR_EQUAL .)
    KUNAI           reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    INTEGER_TYPE    reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    BOOLEAN_TYPE    reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    DECIMAL_TYPE    reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    STRING_TYPE     reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    IF              reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    FOR             reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    $end            reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    LESS_OR_EQUAL   reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    RETURN          reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    VARIABLE        reduce using rule 39 (S -> LESS_OR_EQUAL .)
    NUMBER          reduce using rule 39 (S -> LESS_OR_EQUAL .)
    TRUE_VALUE      reduce using rule 39 (S -> LESS_OR_EQUAL .)
    FALSE_VALUE     reduce using rule 39 (S -> LESS_OR_EQUAL .)
    QUOTATION_MARKS reduce using rule 39 (S -> LESS_OR_EQUAL .)

  ! VARIABLE        [ reduce using rule 65 (MN -> LESS_OR_EQUAL .) ]


state 71

    (67) PRINT -> KUNAI MY VA MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    BLOCK_CODE                     shift and go to state 96
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 72

    (68) PRINT -> KUNAI MY CD MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    BLOCK_CODE                     shift and go to state 97
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 73

    (65) MN -> LESS_OR_EQUAL .

    KUNAI           reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    INTEGER_TYPE    reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    BOOLEAN_TYPE    reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    DECIMAL_TYPE    reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    STRING_TYPE     reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    IF              reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    VARIABLE        reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    FOR             reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    $end            reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    LESS_OR_EQUAL   reduce using rule 65 (MN -> LESS_OR_EQUAL .)
    RETURN          reduce using rule 65 (MN -> LESS_OR_EQUAL .)


state 74

    (13) GV -> TD V I VA BLOCK_CODE .

    $end            reduce using rule 13 (GV -> TD V I VA BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 13 (GV -> TD V I VA BLOCK_CODE .)
    RETURN          reduce using rule 13 (GV -> TD V I VA BLOCK_CODE .)


state 75

    (41) GF -> TD V ME PR MA . MY C RT MN BLOCK_CODE
    (43) GF -> TD V ME PR MA . MY RT MN BLOCK_CODE
    (64) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 28

    MY                             shift and go to state 98

state 76

    (45) GF -> TD V ME MA MY . C RT MN BLOCK_CODE
    (47) GF -> TD V ME MA MY . RT MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (53) RT -> . RETURN V
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (57) F -> . FOR

  ! shift/reduce conflict for RETURN resolved as shift
    RETURN          shift and go to state 101
    KUNAI           shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! RETURN          [ reduce using rule 70 (EMPTY -> .) ]

    TD                             shift and go to state 85
    C                              shift and go to state 99
    RT                             shift and go to state 100
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 77

    (42) GF -> V ME PR MA MY . C MN BLOCK_CODE
    (44) GF -> V ME PR MA MY . MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (65) MN -> . LESS_OR_EQUAL
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (57) F -> . FOR

  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
    LESS_OR_EQUAL   shift and go to state 73
    KUNAI           shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! LESS_OR_EQUAL   [ reduce using rule 70 (EMPTY -> .) ]

    C                              shift and go to state 102
    MN                             shift and go to state 103
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    TD                             shift and go to state 85
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 78

    (46) GF -> V ME MA MY C . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 104

state 79

    (48) GF -> V ME MA MY MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 105
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 80

    (8) C -> GV .

    LESS_OR_EQUAL   reduce using rule 8 (C -> GV .)
    RETURN          reduce using rule 8 (C -> GV .)


state 81

    (9) C -> GC .

    LESS_OR_EQUAL   reduce using rule 9 (C -> GC .)
    RETURN          reduce using rule 9 (C -> GC .)


state 82

    (10) C -> GCF .

    LESS_OR_EQUAL   reduce using rule 10 (C -> GCF .)
    RETURN          reduce using rule 10 (C -> GCF .)


state 83

    (11) C -> PRINT .

    LESS_OR_EQUAL   reduce using rule 11 (C -> PRINT .)
    RETURN          reduce using rule 11 (C -> PRINT .)


state 84

    (12) C -> EMPTY .
    (15) GV -> EMPTY .
    (29) GC -> EMPTY .
    (56) GCF -> EMPTY .
    (69) PRINT -> EMPTY .

  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (C -> EMPTY .)
    LESS_OR_EQUAL   reduce using rule 12 (C -> EMPTY .)
    RETURN          reduce using rule 12 (C -> EMPTY .)

  ! LESS_OR_EQUAL   [ reduce using rule 15 (GV -> EMPTY .) ]
  ! RETURN          [ reduce using rule 15 (GV -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 29 (GC -> EMPTY .) ]
  ! RETURN          [ reduce using rule 29 (GC -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 56 (GCF -> EMPTY .) ]
  ! RETURN          [ reduce using rule 56 (GCF -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 69 (PRINT -> EMPTY .) ]
  ! RETURN          [ reduce using rule 69 (PRINT -> EMPTY .) ]


state 85

    (13) GV -> TD . V I VA BLOCK_CODE
    (14) GV -> TD . V BLOCK_CODE
    (20) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 106

state 86

    (27) GC -> CN PA CD PC MY . C MN BLOCK_CODE
    (28) GC -> CN PA CD PC MY . MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (65) MN -> . LESS_OR_EQUAL
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (57) F -> . FOR

  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
    LESS_OR_EQUAL   shift and go to state 73
    KUNAI           shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! LESS_OR_EQUAL   [ reduce using rule 70 (EMPTY -> .) ]

    CN                             shift and go to state 11
    C                              shift and go to state 107
    MN                             shift and go to state 108
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    TD                             shift and go to state 85
    F                              shift and go to state 12

state 87

    (31) CD -> V S V .

    PARENTHESIS_CLOSE reduce using rule 31 (CD -> V S V .)
    LESS_OR_EQUAL   reduce using rule 31 (CD -> V S V .)


state 88

    (32) CD -> V S VA .

    PARENTHESIS_CLOSE reduce using rule 32 (CD -> V S VA .)
    LESS_OR_EQUAL   reduce using rule 32 (CD -> V S VA .)


state 89

    (34) CD -> VA S VA .

    PARENTHESIS_CLOSE reduce using rule 34 (CD -> VA S VA .)
    LESS_OR_EQUAL   reduce using rule 34 (CD -> VA S VA .)


state 90

    (33) CD -> VA S V .

    PARENTHESIS_CLOSE reduce using rule 33 (CD -> VA S V .)
    LESS_OR_EQUAL   reduce using rule 33 (CD -> VA S V .)


state 91

    (23) VA -> NUMBER DOT NUMBER .

    EQUAL           reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    GREATER_THAN    reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    LESS_THAN       reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    GREATER_OR_EQUAL reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    LESS_OR_EQUAL   reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    NOT_EQUAL       reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    KUNAI           reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    INTEGER_TYPE    reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    BOOLEAN_TYPE    reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    DECIMAL_TYPE    reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    STRING_TYPE     reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    IF              reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    VARIABLE        reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    FOR             reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    $end            reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    RETURN          reduce using rule 23 (VA -> NUMBER DOT NUMBER .)
    PARENTHESIS_CLOSE reduce using rule 23 (VA -> NUMBER DOT NUMBER .)


state 92

    (26) VA -> QUOTATION_MARKS V QUOTATION_MARKS .

    EQUAL           reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    GREATER_THAN    reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    LESS_THAN       reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    GREATER_OR_EQUAL reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    LESS_OR_EQUAL   reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    NOT_EQUAL       reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    KUNAI           reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    INTEGER_TYPE    reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    BOOLEAN_TYPE    reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    DECIMAL_TYPE    reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    STRING_TYPE     reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    IF              reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    VARIABLE        reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    FOR             reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    $end            reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    RETURN          reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    PARENTHESIS_CLOSE reduce using rule 26 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)


state 93

    (54) GCF -> F PA CDF PC MY . C MN BLOCK_CODE
    (55) GCF -> F PA CDF PC MY . MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (65) MN -> . LESS_OR_EQUAL
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (57) F -> . FOR

  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
    LESS_OR_EQUAL   shift and go to state 73
    KUNAI           shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! LESS_OR_EQUAL   [ reduce using rule 70 (EMPTY -> .) ]

    F                              shift and go to state 12
    C                              shift and go to state 109
    MN                             shift and go to state 110
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    TD                             shift and go to state 85
    CN                             shift and go to state 11

state 94

    (58) CDF -> NUMBER SE NUMBER . SE O
    (59) SE -> . PIPE

    PIPE            shift and go to state 68

    SE                             shift and go to state 111

state 95

    (66) PRINT -> KUNAI MY V MN BLOCK_CODE .

    $end            reduce using rule 66 (PRINT -> KUNAI MY V MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 66 (PRINT -> KUNAI MY V MN BLOCK_CODE .)
    RETURN          reduce using rule 66 (PRINT -> KUNAI MY V MN BLOCK_CODE .)


state 96

    (67) PRINT -> KUNAI MY VA MN BLOCK_CODE .

    $end            reduce using rule 67 (PRINT -> KUNAI MY VA MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 67 (PRINT -> KUNAI MY VA MN BLOCK_CODE .)
    RETURN          reduce using rule 67 (PRINT -> KUNAI MY VA MN BLOCK_CODE .)


state 97

    (68) PRINT -> KUNAI MY CD MN BLOCK_CODE .

    $end            reduce using rule 68 (PRINT -> KUNAI MY CD MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 68 (PRINT -> KUNAI MY CD MN BLOCK_CODE .)
    RETURN          reduce using rule 68 (PRINT -> KUNAI MY CD MN BLOCK_CODE .)


state 98

    (41) GF -> TD V ME PR MA MY . C RT MN BLOCK_CODE
    (43) GF -> TD V ME PR MA MY . RT MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (53) RT -> . RETURN V
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (57) F -> . FOR

  ! shift/reduce conflict for RETURN resolved as shift
    RETURN          shift and go to state 101
    KUNAI           shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! RETURN          [ reduce using rule 70 (EMPTY -> .) ]

    TD                             shift and go to state 85
    C                              shift and go to state 112
    RT                             shift and go to state 113
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 99

    (45) GF -> TD V ME MA MY C . RT MN BLOCK_CODE
    (53) RT -> . RETURN V

    RETURN          shift and go to state 101

    RT                             shift and go to state 114

state 100

    (47) GF -> TD V ME MA MY RT . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 115

state 101

    (53) RT -> RETURN . V
    (20) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 116

state 102

    (42) GF -> V ME PR MA MY C . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 117

state 103

    (44) GF -> V ME PR MA MY MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 118
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 104

    (46) GF -> V ME MA MY C MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 119
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 105

    (48) GF -> V ME MA MY MN BLOCK_CODE .

    $end            reduce using rule 48 (GF -> V ME MA MY MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 48 (GF -> V ME MA MY MN BLOCK_CODE .)
    RETURN          reduce using rule 48 (GF -> V ME MA MY MN BLOCK_CODE .)


state 106

    (13) GV -> TD V . I VA BLOCK_CODE
    (14) GV -> TD V . BLOCK_CODE
    (21) I -> . ASSIGNMENT
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    ASSIGNMENT      shift and go to state 32
    KUNAI           shift and go to state 13
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    I                              shift and go to state 29
    BLOCK_CODE                     shift and go to state 30
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 107

    (27) GC -> CN PA CD PC MY C . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 120

state 108

    (28) GC -> CN PA CD PC MY MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    CN                             shift and go to state 11
    BLOCK_CODE                     shift and go to state 121
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    F                              shift and go to state 12

state 109

    (54) GCF -> F PA CDF PC MY C . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 122

state 110

    (55) GCF -> F PA CDF PC MY MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    F                              shift and go to state 12
    BLOCK_CODE                     shift and go to state 123
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11

state 111

    (58) CDF -> NUMBER SE NUMBER SE . O
    (60) O -> . SUBTRACTION
    (61) O -> . ADDITION

    SUBTRACTION     shift and go to state 125
    ADDITION        shift and go to state 126

    O                              shift and go to state 124

state 112

    (41) GF -> TD V ME PR MA MY C . RT MN BLOCK_CODE
    (53) RT -> . RETURN V

    RETURN          shift and go to state 101

    RT                             shift and go to state 127

state 113

    (43) GF -> TD V ME PR MA MY RT . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 128

state 114

    (45) GF -> TD V ME MA MY C RT . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 129

state 115

    (47) GF -> TD V ME MA MY RT MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 130
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 116

    (53) RT -> RETURN V .

    LESS_OR_EQUAL   reduce using rule 53 (RT -> RETURN V .)


state 117

    (42) GF -> V ME PR MA MY C MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 131
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 118

    (44) GF -> V ME PR MA MY MN BLOCK_CODE .

    $end            reduce using rule 44 (GF -> V ME PR MA MY MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 44 (GF -> V ME PR MA MY MN BLOCK_CODE .)
    RETURN          reduce using rule 44 (GF -> V ME PR MA MY MN BLOCK_CODE .)


state 119

    (46) GF -> V ME MA MY C MN BLOCK_CODE .

    $end            reduce using rule 46 (GF -> V ME MA MY C MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 46 (GF -> V ME MA MY C MN BLOCK_CODE .)
    RETURN          reduce using rule 46 (GF -> V ME MA MY C MN BLOCK_CODE .)


state 120

    (27) GC -> CN PA CD PC MY C MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    CN                             shift and go to state 11
    BLOCK_CODE                     shift and go to state 132
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    F                              shift and go to state 12

state 121

    (28) GC -> CN PA CD PC MY MN BLOCK_CODE .

    $end            reduce using rule 28 (GC -> CN PA CD PC MY MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 28 (GC -> CN PA CD PC MY MN BLOCK_CODE .)
    RETURN          reduce using rule 28 (GC -> CN PA CD PC MY MN BLOCK_CODE .)


state 122

    (54) GCF -> F PA CDF PC MY C MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    F                              shift and go to state 12
    BLOCK_CODE                     shift and go to state 133
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11

state 123

    (55) GCF -> F PA CDF PC MY MN BLOCK_CODE .

    $end            reduce using rule 55 (GCF -> F PA CDF PC MY MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 55 (GCF -> F PA CDF PC MY MN BLOCK_CODE .)
    RETURN          reduce using rule 55 (GCF -> F PA CDF PC MY MN BLOCK_CODE .)


state 124

    (58) CDF -> NUMBER SE NUMBER SE O .

    PARENTHESIS_CLOSE reduce using rule 58 (CDF -> NUMBER SE NUMBER SE O .)


state 125

    (60) O -> SUBTRACTION .

    PARENTHESIS_CLOSE reduce using rule 60 (O -> SUBTRACTION .)


state 126

    (61) O -> ADDITION .

    PARENTHESIS_CLOSE reduce using rule 61 (O -> ADDITION .)


state 127

    (41) GF -> TD V ME PR MA MY C RT . MN BLOCK_CODE
    (65) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 73

    MN                             shift and go to state 134

state 128

    (43) GF -> TD V ME PR MA MY RT MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 135
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 129

    (45) GF -> TD V ME MA MY C RT MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 136
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 130

    (47) GF -> TD V ME MA MY RT MN BLOCK_CODE .

    $end            reduce using rule 47 (GF -> TD V ME MA MY RT MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 47 (GF -> TD V ME MA MY RT MN BLOCK_CODE .)
    RETURN          reduce using rule 47 (GF -> TD V ME MA MY RT MN BLOCK_CODE .)


state 131

    (42) GF -> V ME PR MA MY C MN BLOCK_CODE .

    $end            reduce using rule 42 (GF -> V ME PR MA MY C MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 42 (GF -> V ME PR MA MY C MN BLOCK_CODE .)
    RETURN          reduce using rule 42 (GF -> V ME PR MA MY C MN BLOCK_CODE .)


state 132

    (27) GC -> CN PA CD PC MY C MN BLOCK_CODE .

    $end            reduce using rule 27 (GC -> CN PA CD PC MY C MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 27 (GC -> CN PA CD PC MY C MN BLOCK_CODE .)
    RETURN          reduce using rule 27 (GC -> CN PA CD PC MY C MN BLOCK_CODE .)


state 133

    (54) GCF -> F PA CDF PC MY C MN BLOCK_CODE .

    $end            reduce using rule 54 (GCF -> F PA CDF PC MY C MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 54 (GCF -> F PA CDF PC MY C MN BLOCK_CODE .)
    RETURN          reduce using rule 54 (GCF -> F PA CDF PC MY C MN BLOCK_CODE .)


state 134

    (41) GF -> TD V ME PR MA MY C RT MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (27) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (28) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (29) GC -> . EMPTY
    (41) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (42) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (43) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (44) GF -> . V ME PR MA MY MN BLOCK_CODE
    (45) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (46) GF -> . V ME MA MY C MN BLOCK_CODE
    (47) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (48) GF -> . V ME MA MY MN BLOCK_CODE
    (49) GF -> . EMPTY
    (54) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (55) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (56) GCF -> . EMPTY
    (66) PRINT -> . KUNAI MY V MN BLOCK_CODE
    (67) PRINT -> . KUNAI MY VA MN BLOCK_CODE
    (68) PRINT -> . KUNAI MY CD MN BLOCK_CODE
    (69) PRINT -> . EMPTY
    (70) EMPTY -> .
    (16) TD -> . INTEGER_TYPE
    (17) TD -> . BOOLEAN_TYPE
    (18) TD -> . DECIMAL_TYPE
    (19) TD -> . STRING_TYPE
    (30) CN -> . IF
    (20) V -> . VARIABLE
    (57) F -> . FOR

    KUNAI           shift and go to state 13
    $end            reduce using rule 70 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 70 (EMPTY -> .)
    RETURN          reduce using rule 70 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 137
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 135

    (43) GF -> TD V ME PR MA MY RT MN BLOCK_CODE .

    $end            reduce using rule 43 (GF -> TD V ME PR MA MY RT MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 43 (GF -> TD V ME PR MA MY RT MN BLOCK_CODE .)
    RETURN          reduce using rule 43 (GF -> TD V ME PR MA MY RT MN BLOCK_CODE .)


state 136

    (45) GF -> TD V ME MA MY C RT MN BLOCK_CODE .

    $end            reduce using rule 45 (GF -> TD V ME MA MY C RT MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 45 (GF -> TD V ME MA MY C RT MN BLOCK_CODE .)
    RETURN          reduce using rule 45 (GF -> TD V ME MA MY C RT MN BLOCK_CODE .)


state 137

    (41) GF -> TD V ME PR MA MY C RT MN BLOCK_CODE .

    $end            reduce using rule 41 (GF -> TD V ME PR MA MY C RT MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 41 (GF -> TD V ME PR MA MY C RT MN BLOCK_CODE .)
    RETURN          reduce using rule 41 (GF -> TD V ME PR MA MY C RT MN BLOCK_CODE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 98 resolved as shift
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (GV -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (GC -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (GF -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (GCF -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (PRINT -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 70 resolved using rule (S -> LESS_OR_EQUAL)
WARNING: rejected rule (MN -> LESS_OR_EQUAL) in state 70
WARNING: reduce/reduce conflict in state 84 resolved using rule (C -> EMPTY)
WARNING: rejected rule (GV -> EMPTY) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (C -> EMPTY)
WARNING: rejected rule (GC -> EMPTY) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (C -> EMPTY)
WARNING: rejected rule (GCF -> EMPTY) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (C -> EMPTY)
WARNING: rejected rule (PRINT -> EMPTY) in state 84
WARNING: Rule (GV -> EMPTY) is never reduced
WARNING: Rule (GC -> EMPTY) is never reduced
WARNING: Rule (GF -> EMPTY) is never reduced
WARNING: Rule (GCF -> EMPTY) is never reduced
WARNING: Rule (PRINT -> EMPTY) is never reduced
