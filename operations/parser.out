Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> BLOCK_CODE
Rule 2     BLOCK_CODE -> GV
Rule 3     BLOCK_CODE -> GC
Rule 4     BLOCK_CODE -> GF
Rule 5     BLOCK_CODE -> GCF
Rule 6     BLOCK_CODE -> PRINT
Rule 7     BLOCK_CODE -> EMPTY
Rule 8     C -> GV
Rule 9     C -> GC
Rule 10    C -> GCF
Rule 11    C -> PRINT
Rule 12    C -> EMPTY
Rule 13    GV -> TD V I VA BLOCK_CODE
Rule 14    GV -> TD V BLOCK_CODE
Rule 15    GV -> EMPTY
Rule 16    PRINT -> SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
Rule 17    PRINT -> EMPTY
Rule 18    VAP -> V
Rule 19    VAP -> VA
Rule 20    VAP -> CD
Rule 21    VAP -> FR
Rule 22    FR -> TD V ME PR MA
Rule 23    FR -> TD V ME MA
Rule 24    TD -> INTEGER_TYPE
Rule 25    TD -> BOOLEAN_TYPE
Rule 26    TD -> DECIMAL_TYPE
Rule 27    TD -> STRING_TYPE
Rule 28    V -> VARIABLE
Rule 29    I -> ASSIGNMENT
Rule 30    VA -> NUMBER
Rule 31    VA -> NUMBER DOT NUMBER
Rule 32    VA -> TRUE_VALUE
Rule 33    VA -> FALSE_VALUE
Rule 34    VA -> QUOTATION_MARKS V QUOTATION_MARKS
Rule 35    GC -> CN PA CD PC MY C MN BLOCK_CODE
Rule 36    GC -> CN PA CD PC MY MN BLOCK_CODE
Rule 37    GC -> EMPTY
Rule 38    CN -> IF
Rule 39    CD -> V S V
Rule 40    CD -> V S VA
Rule 41    CD -> VA S V
Rule 42    CD -> VA S VA
Rule 43    S -> EQUAL
Rule 44    S -> GREATER_THAN
Rule 45    S -> LESS_THAN
Rule 46    S -> GREATER_OR_EQUAL
Rule 47    S -> LESS_OR_EQUAL
Rule 48    S -> NOT_EQUAL
Rule 49    GF -> TD V ME PR MA MY C RT MN BLOCK_CODE
Rule 50    GF -> V ME PR MA MY C MN BLOCK_CODE
Rule 51    GF -> TD V ME PR MA MY RT MN BLOCK_CODE
Rule 52    GF -> V ME PR MA MY MN BLOCK_CODE
Rule 53    GF -> TD V ME MA MY C RT MN BLOCK_CODE
Rule 54    GF -> V ME MA MY C MN BLOCK_CODE
Rule 55    GF -> TD V ME MA MY RT MN BLOCK_CODE
Rule 56    GF -> V ME MA MY MN BLOCK_CODE
Rule 57    GF -> EMPTY
Rule 58    PR -> V
Rule 59    ME -> LESS_THAN
Rule 60    MA -> GREATER_THAN
Rule 61    RT -> RETURN V
Rule 62    GCF -> F PA CDF PC MY C MN BLOCK_CODE
Rule 63    GCF -> F PA CDF PC MY MN BLOCK_CODE
Rule 64    GCF -> EMPTY
Rule 65    F -> FOR
Rule 66    CDF -> NUMBER SE NUMBER SE O
Rule 67    SE -> PIPE
Rule 68    O -> SUBTRACTION
Rule 69    O -> ADDITION
Rule 70    PA -> PARENTHESIS_OPEN
Rule 71    PC -> PARENTHESIS_CLOSE
Rule 72    MY -> OPEN_BODY
Rule 73    MN -> LESS_OR_EQUAL
Rule 74    EMPTY -> <empty>

Terminals, with rules where they appear

ADDITION             : 69
ASSIGNMENT           : 29
BOOLEAN_TYPE         : 25
DECIMAL_TYPE         : 26
DOT                  : 31
EQUAL                : 43
FALSE_VALUE          : 33
FOR                  : 65
GREATER_OR_EQUAL     : 46
GREATER_THAN         : 44 60
IF                   : 38
INTEGER_TYPE         : 24
LESS_OR_EQUAL        : 47 73
LESS_THAN            : 45 59
NOT_EQUAL            : 48
NUMBER               : 30 31 31 66 66
OPEN_BODY            : 72
PARENTHESIS_CLOSE    : 71
PARENTHESIS_OPEN     : 70
PIPE                 : 67
QUOTATION_MARKS      : 34 34
RETURN               : 61
STRING_TYPE          : 27
SUBTRACTION          : 16 16 68
TRUE_VALUE           : 32
VARIABLE             : 28
error                : 

Nonterminals, with rules where they appear

BLOCK_CODE           : 1 13 14 16 35 36 49 50 51 52 53 54 55 56 62 63
C                    : 35 49 50 53 54 62
CD                   : 20 35 36
CDF                  : 62 63
CN                   : 35 36
EMPTY                : 7 12 15 17 37 57 64
F                    : 62 63
FR                   : 21
GC                   : 3 9
GCF                  : 5 10
GF                   : 4
GV                   : 2 8
I                    : 13
MA                   : 16 22 23 49 50 51 52 53 54 55 56
ME                   : 16 22 23 49 50 51 52 53 54 55 56
MN                   : 35 36 49 50 51 52 53 54 55 56 62 63
MY                   : 35 36 49 50 51 52 53 54 55 56 62 63
O                    : 66
PA                   : 35 36 62 63
PC                   : 35 36 62 63
PR                   : 22 49 50 51 52
PRINT                : 6 11
PROGRAM              : 0
RT                   : 49 51 53 55
S                    : 39 40 41 42
SE                   : 66 66
TD                   : 13 14 22 23 49 51 53 55
V                    : 13 14 18 22 23 34 39 39 40 41 49 50 51 52 53 54 55 56 58 61
VA                   : 13 19 40 41 42 42
VAP                  : 16

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    PROGRAM                        shift and go to state 1
    BLOCK_CODE                     shift and go to state 2
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> BLOCK_CODE .

    $end            reduce using rule 1 (PROGRAM -> BLOCK_CODE .)


state 3

    (2) BLOCK_CODE -> GV .

    $end            reduce using rule 2 (BLOCK_CODE -> GV .)
    LESS_OR_EQUAL   reduce using rule 2 (BLOCK_CODE -> GV .)
    RETURN          reduce using rule 2 (BLOCK_CODE -> GV .)


state 4

    (3) BLOCK_CODE -> GC .

    $end            reduce using rule 3 (BLOCK_CODE -> GC .)
    LESS_OR_EQUAL   reduce using rule 3 (BLOCK_CODE -> GC .)
    RETURN          reduce using rule 3 (BLOCK_CODE -> GC .)


state 5

    (4) BLOCK_CODE -> GF .

    $end            reduce using rule 4 (BLOCK_CODE -> GF .)
    LESS_OR_EQUAL   reduce using rule 4 (BLOCK_CODE -> GF .)
    RETURN          reduce using rule 4 (BLOCK_CODE -> GF .)


state 6

    (5) BLOCK_CODE -> GCF .

    $end            reduce using rule 5 (BLOCK_CODE -> GCF .)
    LESS_OR_EQUAL   reduce using rule 5 (BLOCK_CODE -> GCF .)
    RETURN          reduce using rule 5 (BLOCK_CODE -> GCF .)


state 7

    (6) BLOCK_CODE -> PRINT .

    $end            reduce using rule 6 (BLOCK_CODE -> PRINT .)
    LESS_OR_EQUAL   reduce using rule 6 (BLOCK_CODE -> PRINT .)
    RETURN          reduce using rule 6 (BLOCK_CODE -> PRINT .)


state 8

    (7) BLOCK_CODE -> EMPTY .
    (15) GV -> EMPTY .
    (37) GC -> EMPTY .
    (57) GF -> EMPTY .
    (64) GCF -> EMPTY .
    (17) PRINT -> EMPTY .

  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for $end resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 7 (BLOCK_CODE -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (BLOCK_CODE -> EMPTY .)
    $end            reduce using rule 7 (BLOCK_CODE -> EMPTY .)
    LESS_OR_EQUAL   reduce using rule 7 (BLOCK_CODE -> EMPTY .)
    RETURN          reduce using rule 7 (BLOCK_CODE -> EMPTY .)

  ! $end            [ reduce using rule 15 (GV -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 15 (GV -> EMPTY .) ]
  ! RETURN          [ reduce using rule 15 (GV -> EMPTY .) ]
  ! $end            [ reduce using rule 37 (GC -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 37 (GC -> EMPTY .) ]
  ! RETURN          [ reduce using rule 37 (GC -> EMPTY .) ]
  ! $end            [ reduce using rule 57 (GF -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 57 (GF -> EMPTY .) ]
  ! RETURN          [ reduce using rule 57 (GF -> EMPTY .) ]
  ! $end            [ reduce using rule 64 (GCF -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 64 (GCF -> EMPTY .) ]
  ! RETURN          [ reduce using rule 64 (GCF -> EMPTY .) ]
  ! $end            [ reduce using rule 17 (PRINT -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 17 (PRINT -> EMPTY .) ]
  ! RETURN          [ reduce using rule 17 (PRINT -> EMPTY .) ]


state 9

    (13) GV -> TD . V I VA BLOCK_CODE
    (14) GV -> TD . V BLOCK_CODE
    (49) GF -> TD . V ME PR MA MY C RT MN BLOCK_CODE
    (51) GF -> TD . V ME PR MA MY RT MN BLOCK_CODE
    (53) GF -> TD . V ME MA MY C RT MN BLOCK_CODE
    (55) GF -> TD . V ME MA MY RT MN BLOCK_CODE
    (28) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 21

state 10

    (50) GF -> V . ME PR MA MY C MN BLOCK_CODE
    (52) GF -> V . ME PR MA MY MN BLOCK_CODE
    (54) GF -> V . ME MA MY C MN BLOCK_CODE
    (56) GF -> V . ME MA MY MN BLOCK_CODE
    (59) ME -> . LESS_THAN

    LESS_THAN       shift and go to state 23

    ME                             shift and go to state 22

state 11

    (35) GC -> CN . PA CD PC MY C MN BLOCK_CODE
    (36) GC -> CN . PA CD PC MY MN BLOCK_CODE
    (70) PA -> . PARENTHESIS_OPEN

    PARENTHESIS_OPEN shift and go to state 25

    PA                             shift and go to state 24

state 12

    (62) GCF -> F . PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> F . PA CDF PC MY MN BLOCK_CODE
    (70) PA -> . PARENTHESIS_OPEN

    PARENTHESIS_OPEN shift and go to state 25

    PA                             shift and go to state 26

state 13

    (16) PRINT -> SUBTRACTION . MA VAP ME SUBTRACTION BLOCK_CODE
    (60) MA -> . GREATER_THAN

    GREATER_THAN    shift and go to state 28

    MA                             shift and go to state 27

state 14

    (24) TD -> INTEGER_TYPE .

    VARIABLE        reduce using rule 24 (TD -> INTEGER_TYPE .)


state 15

    (25) TD -> BOOLEAN_TYPE .

    VARIABLE        reduce using rule 25 (TD -> BOOLEAN_TYPE .)


state 16

    (26) TD -> DECIMAL_TYPE .

    VARIABLE        reduce using rule 26 (TD -> DECIMAL_TYPE .)


state 17

    (27) TD -> STRING_TYPE .

    VARIABLE        reduce using rule 27 (TD -> STRING_TYPE .)


state 18

    (38) CN -> IF .

    PARENTHESIS_OPEN reduce using rule 38 (CN -> IF .)


state 19

    (28) V -> VARIABLE .

    LESS_THAN       reduce using rule 28 (V -> VARIABLE .)
    ASSIGNMENT      reduce using rule 28 (V -> VARIABLE .)
    SUBTRACTION     reduce using rule 28 (V -> VARIABLE .)
    INTEGER_TYPE    reduce using rule 28 (V -> VARIABLE .)
    BOOLEAN_TYPE    reduce using rule 28 (V -> VARIABLE .)
    DECIMAL_TYPE    reduce using rule 28 (V -> VARIABLE .)
    STRING_TYPE     reduce using rule 28 (V -> VARIABLE .)
    IF              reduce using rule 28 (V -> VARIABLE .)
    VARIABLE        reduce using rule 28 (V -> VARIABLE .)
    FOR             reduce using rule 28 (V -> VARIABLE .)
    $end            reduce using rule 28 (V -> VARIABLE .)
    LESS_OR_EQUAL   reduce using rule 28 (V -> VARIABLE .)
    RETURN          reduce using rule 28 (V -> VARIABLE .)
    GREATER_THAN    reduce using rule 28 (V -> VARIABLE .)
    EQUAL           reduce using rule 28 (V -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 28 (V -> VARIABLE .)
    NOT_EQUAL       reduce using rule 28 (V -> VARIABLE .)
    QUOTATION_MARKS reduce using rule 28 (V -> VARIABLE .)
    PARENTHESIS_CLOSE reduce using rule 28 (V -> VARIABLE .)


state 20

    (65) F -> FOR .

    PARENTHESIS_OPEN reduce using rule 65 (F -> FOR .)


state 21

    (13) GV -> TD V . I VA BLOCK_CODE
    (14) GV -> TD V . BLOCK_CODE
    (49) GF -> TD V . ME PR MA MY C RT MN BLOCK_CODE
    (51) GF -> TD V . ME PR MA MY RT MN BLOCK_CODE
    (53) GF -> TD V . ME MA MY C RT MN BLOCK_CODE
    (55) GF -> TD V . ME MA MY RT MN BLOCK_CODE
    (29) I -> . ASSIGNMENT
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (59) ME -> . LESS_THAN
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    ASSIGNMENT      shift and go to state 32
    LESS_THAN       shift and go to state 23
    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    I                              shift and go to state 29
    BLOCK_CODE                     shift and go to state 30
    ME                             shift and go to state 31
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 22

    (50) GF -> V ME . PR MA MY C MN BLOCK_CODE
    (52) GF -> V ME . PR MA MY MN BLOCK_CODE
    (54) GF -> V ME . MA MY C MN BLOCK_CODE
    (56) GF -> V ME . MA MY MN BLOCK_CODE
    (58) PR -> . V
    (60) MA -> . GREATER_THAN
    (28) V -> . VARIABLE

    GREATER_THAN    shift and go to state 28
    VARIABLE        shift and go to state 19

    V                              shift and go to state 33
    PR                             shift and go to state 34
    MA                             shift and go to state 35

state 23

    (59) ME -> LESS_THAN .

    GREATER_THAN    reduce using rule 59 (ME -> LESS_THAN .)
    VARIABLE        reduce using rule 59 (ME -> LESS_THAN .)
    SUBTRACTION     reduce using rule 59 (ME -> LESS_THAN .)


state 24

    (35) GC -> CN PA . CD PC MY C MN BLOCK_CODE
    (36) GC -> CN PA . CD PC MY MN BLOCK_CODE
    (39) CD -> . V S V
    (40) CD -> . V S VA
    (41) CD -> . VA S V
    (42) CD -> . VA S VA
    (28) V -> . VARIABLE
    (30) VA -> . NUMBER
    (31) VA -> . NUMBER DOT NUMBER
    (32) VA -> . TRUE_VALUE
    (33) VA -> . FALSE_VALUE
    (34) VA -> . QUOTATION_MARKS V QUOTATION_MARKS

    VARIABLE        shift and go to state 19
    NUMBER          shift and go to state 39
    TRUE_VALUE      shift and go to state 40
    FALSE_VALUE     shift and go to state 41
    QUOTATION_MARKS shift and go to state 42

    CD                             shift and go to state 36
    V                              shift and go to state 37
    VA                             shift and go to state 38

state 25

    (70) PA -> PARENTHESIS_OPEN .

    VARIABLE        reduce using rule 70 (PA -> PARENTHESIS_OPEN .)
    NUMBER          reduce using rule 70 (PA -> PARENTHESIS_OPEN .)
    TRUE_VALUE      reduce using rule 70 (PA -> PARENTHESIS_OPEN .)
    FALSE_VALUE     reduce using rule 70 (PA -> PARENTHESIS_OPEN .)
    QUOTATION_MARKS reduce using rule 70 (PA -> PARENTHESIS_OPEN .)


state 26

    (62) GCF -> F PA . CDF PC MY C MN BLOCK_CODE
    (63) GCF -> F PA . CDF PC MY MN BLOCK_CODE
    (66) CDF -> . NUMBER SE NUMBER SE O

    NUMBER          shift and go to state 44

    CDF                            shift and go to state 43

state 27

    (16) PRINT -> SUBTRACTION MA . VAP ME SUBTRACTION BLOCK_CODE
    (18) VAP -> . V
    (19) VAP -> . VA
    (20) VAP -> . CD
    (21) VAP -> . FR
    (28) V -> . VARIABLE
    (30) VA -> . NUMBER
    (31) VA -> . NUMBER DOT NUMBER
    (32) VA -> . TRUE_VALUE
    (33) VA -> . FALSE_VALUE
    (34) VA -> . QUOTATION_MARKS V QUOTATION_MARKS
    (39) CD -> . V S V
    (40) CD -> . V S VA
    (41) CD -> . VA S V
    (42) CD -> . VA S VA
    (22) FR -> . TD V ME PR MA
    (23) FR -> . TD V ME MA
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE

    VARIABLE        shift and go to state 19
    NUMBER          shift and go to state 39
    TRUE_VALUE      shift and go to state 40
    FALSE_VALUE     shift and go to state 41
    QUOTATION_MARKS shift and go to state 42
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17

    VAP                            shift and go to state 45
    V                              shift and go to state 46
    VA                             shift and go to state 47
    CD                             shift and go to state 48
    FR                             shift and go to state 49
    TD                             shift and go to state 50

state 28

    (60) MA -> GREATER_THAN .

    VARIABLE        reduce using rule 60 (MA -> GREATER_THAN .)
    NUMBER          reduce using rule 60 (MA -> GREATER_THAN .)
    TRUE_VALUE      reduce using rule 60 (MA -> GREATER_THAN .)
    FALSE_VALUE     reduce using rule 60 (MA -> GREATER_THAN .)
    QUOTATION_MARKS reduce using rule 60 (MA -> GREATER_THAN .)
    INTEGER_TYPE    reduce using rule 60 (MA -> GREATER_THAN .)
    BOOLEAN_TYPE    reduce using rule 60 (MA -> GREATER_THAN .)
    DECIMAL_TYPE    reduce using rule 60 (MA -> GREATER_THAN .)
    STRING_TYPE     reduce using rule 60 (MA -> GREATER_THAN .)
    OPEN_BODY       reduce using rule 60 (MA -> GREATER_THAN .)
    LESS_THAN       reduce using rule 60 (MA -> GREATER_THAN .)


state 29

    (13) GV -> TD V I . VA BLOCK_CODE
    (30) VA -> . NUMBER
    (31) VA -> . NUMBER DOT NUMBER
    (32) VA -> . TRUE_VALUE
    (33) VA -> . FALSE_VALUE
    (34) VA -> . QUOTATION_MARKS V QUOTATION_MARKS

    NUMBER          shift and go to state 39
    TRUE_VALUE      shift and go to state 40
    FALSE_VALUE     shift and go to state 41
    QUOTATION_MARKS shift and go to state 42

    VA                             shift and go to state 51

state 30

    (14) GV -> TD V BLOCK_CODE .

    $end            reduce using rule 14 (GV -> TD V BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 14 (GV -> TD V BLOCK_CODE .)
    RETURN          reduce using rule 14 (GV -> TD V BLOCK_CODE .)


state 31

    (49) GF -> TD V ME . PR MA MY C RT MN BLOCK_CODE
    (51) GF -> TD V ME . PR MA MY RT MN BLOCK_CODE
    (53) GF -> TD V ME . MA MY C RT MN BLOCK_CODE
    (55) GF -> TD V ME . MA MY RT MN BLOCK_CODE
    (58) PR -> . V
    (60) MA -> . GREATER_THAN
    (28) V -> . VARIABLE

    GREATER_THAN    shift and go to state 28
    VARIABLE        shift and go to state 19

    V                              shift and go to state 33
    PR                             shift and go to state 52
    MA                             shift and go to state 53

state 32

    (29) I -> ASSIGNMENT .

    NUMBER          reduce using rule 29 (I -> ASSIGNMENT .)
    TRUE_VALUE      reduce using rule 29 (I -> ASSIGNMENT .)
    FALSE_VALUE     reduce using rule 29 (I -> ASSIGNMENT .)
    QUOTATION_MARKS reduce using rule 29 (I -> ASSIGNMENT .)


state 33

    (58) PR -> V .

    GREATER_THAN    reduce using rule 58 (PR -> V .)


state 34

    (50) GF -> V ME PR . MA MY C MN BLOCK_CODE
    (52) GF -> V ME PR . MA MY MN BLOCK_CODE
    (60) MA -> . GREATER_THAN

    GREATER_THAN    shift and go to state 28

    MA                             shift and go to state 54

state 35

    (54) GF -> V ME MA . MY C MN BLOCK_CODE
    (56) GF -> V ME MA . MY MN BLOCK_CODE
    (72) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 56

    MY                             shift and go to state 55

state 36

    (35) GC -> CN PA CD . PC MY C MN BLOCK_CODE
    (36) GC -> CN PA CD . PC MY MN BLOCK_CODE
    (71) PC -> . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE shift and go to state 58

    PC                             shift and go to state 57

state 37

    (39) CD -> V . S V
    (40) CD -> V . S VA
    (43) S -> . EQUAL
    (44) S -> . GREATER_THAN
    (45) S -> . LESS_THAN
    (46) S -> . GREATER_OR_EQUAL
    (47) S -> . LESS_OR_EQUAL
    (48) S -> . NOT_EQUAL

    EQUAL           shift and go to state 60
    GREATER_THAN    shift and go to state 61
    LESS_THAN       shift and go to state 62
    GREATER_OR_EQUAL shift and go to state 63
    LESS_OR_EQUAL   shift and go to state 64
    NOT_EQUAL       shift and go to state 65

    S                              shift and go to state 59

state 38

    (41) CD -> VA . S V
    (42) CD -> VA . S VA
    (43) S -> . EQUAL
    (44) S -> . GREATER_THAN
    (45) S -> . LESS_THAN
    (46) S -> . GREATER_OR_EQUAL
    (47) S -> . LESS_OR_EQUAL
    (48) S -> . NOT_EQUAL

    EQUAL           shift and go to state 60
    GREATER_THAN    shift and go to state 61
    LESS_THAN       shift and go to state 62
    GREATER_OR_EQUAL shift and go to state 63
    LESS_OR_EQUAL   shift and go to state 64
    NOT_EQUAL       shift and go to state 65

    S                              shift and go to state 66

state 39

    (30) VA -> NUMBER .
    (31) VA -> NUMBER . DOT NUMBER

    EQUAL           reduce using rule 30 (VA -> NUMBER .)
    GREATER_THAN    reduce using rule 30 (VA -> NUMBER .)
    LESS_THAN       reduce using rule 30 (VA -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 30 (VA -> NUMBER .)
    LESS_OR_EQUAL   reduce using rule 30 (VA -> NUMBER .)
    NOT_EQUAL       reduce using rule 30 (VA -> NUMBER .)
    SUBTRACTION     reduce using rule 30 (VA -> NUMBER .)
    INTEGER_TYPE    reduce using rule 30 (VA -> NUMBER .)
    BOOLEAN_TYPE    reduce using rule 30 (VA -> NUMBER .)
    DECIMAL_TYPE    reduce using rule 30 (VA -> NUMBER .)
    STRING_TYPE     reduce using rule 30 (VA -> NUMBER .)
    IF              reduce using rule 30 (VA -> NUMBER .)
    VARIABLE        reduce using rule 30 (VA -> NUMBER .)
    FOR             reduce using rule 30 (VA -> NUMBER .)
    $end            reduce using rule 30 (VA -> NUMBER .)
    RETURN          reduce using rule 30 (VA -> NUMBER .)
    PARENTHESIS_CLOSE reduce using rule 30 (VA -> NUMBER .)
    DOT             shift and go to state 67


state 40

    (32) VA -> TRUE_VALUE .

    EQUAL           reduce using rule 32 (VA -> TRUE_VALUE .)
    GREATER_THAN    reduce using rule 32 (VA -> TRUE_VALUE .)
    LESS_THAN       reduce using rule 32 (VA -> TRUE_VALUE .)
    GREATER_OR_EQUAL reduce using rule 32 (VA -> TRUE_VALUE .)
    LESS_OR_EQUAL   reduce using rule 32 (VA -> TRUE_VALUE .)
    NOT_EQUAL       reduce using rule 32 (VA -> TRUE_VALUE .)
    SUBTRACTION     reduce using rule 32 (VA -> TRUE_VALUE .)
    INTEGER_TYPE    reduce using rule 32 (VA -> TRUE_VALUE .)
    BOOLEAN_TYPE    reduce using rule 32 (VA -> TRUE_VALUE .)
    DECIMAL_TYPE    reduce using rule 32 (VA -> TRUE_VALUE .)
    STRING_TYPE     reduce using rule 32 (VA -> TRUE_VALUE .)
    IF              reduce using rule 32 (VA -> TRUE_VALUE .)
    VARIABLE        reduce using rule 32 (VA -> TRUE_VALUE .)
    FOR             reduce using rule 32 (VA -> TRUE_VALUE .)
    $end            reduce using rule 32 (VA -> TRUE_VALUE .)
    RETURN          reduce using rule 32 (VA -> TRUE_VALUE .)
    PARENTHESIS_CLOSE reduce using rule 32 (VA -> TRUE_VALUE .)


state 41

    (33) VA -> FALSE_VALUE .

    EQUAL           reduce using rule 33 (VA -> FALSE_VALUE .)
    GREATER_THAN    reduce using rule 33 (VA -> FALSE_VALUE .)
    LESS_THAN       reduce using rule 33 (VA -> FALSE_VALUE .)
    GREATER_OR_EQUAL reduce using rule 33 (VA -> FALSE_VALUE .)
    LESS_OR_EQUAL   reduce using rule 33 (VA -> FALSE_VALUE .)
    NOT_EQUAL       reduce using rule 33 (VA -> FALSE_VALUE .)
    SUBTRACTION     reduce using rule 33 (VA -> FALSE_VALUE .)
    INTEGER_TYPE    reduce using rule 33 (VA -> FALSE_VALUE .)
    BOOLEAN_TYPE    reduce using rule 33 (VA -> FALSE_VALUE .)
    DECIMAL_TYPE    reduce using rule 33 (VA -> FALSE_VALUE .)
    STRING_TYPE     reduce using rule 33 (VA -> FALSE_VALUE .)
    IF              reduce using rule 33 (VA -> FALSE_VALUE .)
    VARIABLE        reduce using rule 33 (VA -> FALSE_VALUE .)
    FOR             reduce using rule 33 (VA -> FALSE_VALUE .)
    $end            reduce using rule 33 (VA -> FALSE_VALUE .)
    RETURN          reduce using rule 33 (VA -> FALSE_VALUE .)
    PARENTHESIS_CLOSE reduce using rule 33 (VA -> FALSE_VALUE .)


state 42

    (34) VA -> QUOTATION_MARKS . V QUOTATION_MARKS
    (28) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 68

state 43

    (62) GCF -> F PA CDF . PC MY C MN BLOCK_CODE
    (63) GCF -> F PA CDF . PC MY MN BLOCK_CODE
    (71) PC -> . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE shift and go to state 58

    PC                             shift and go to state 69

state 44

    (66) CDF -> NUMBER . SE NUMBER SE O
    (67) SE -> . PIPE

    PIPE            shift and go to state 71

    SE                             shift and go to state 70

state 45

    (16) PRINT -> SUBTRACTION MA VAP . ME SUBTRACTION BLOCK_CODE
    (59) ME -> . LESS_THAN

    LESS_THAN       shift and go to state 23

    ME                             shift and go to state 72

state 46

    (18) VAP -> V .
    (39) CD -> V . S V
    (40) CD -> V . S VA
    (43) S -> . EQUAL
    (44) S -> . GREATER_THAN
    (45) S -> . LESS_THAN
    (46) S -> . GREATER_OR_EQUAL
    (47) S -> . LESS_OR_EQUAL
    (48) S -> . NOT_EQUAL

  ! shift/reduce conflict for LESS_THAN resolved as shift
    EQUAL           shift and go to state 60
    GREATER_THAN    shift and go to state 61
    LESS_THAN       shift and go to state 62
    GREATER_OR_EQUAL shift and go to state 63
    LESS_OR_EQUAL   shift and go to state 64
    NOT_EQUAL       shift and go to state 65

  ! LESS_THAN       [ reduce using rule 18 (VAP -> V .) ]

    S                              shift and go to state 59

state 47

    (19) VAP -> VA .
    (41) CD -> VA . S V
    (42) CD -> VA . S VA
    (43) S -> . EQUAL
    (44) S -> . GREATER_THAN
    (45) S -> . LESS_THAN
    (46) S -> . GREATER_OR_EQUAL
    (47) S -> . LESS_OR_EQUAL
    (48) S -> . NOT_EQUAL

  ! shift/reduce conflict for LESS_THAN resolved as shift
    EQUAL           shift and go to state 60
    GREATER_THAN    shift and go to state 61
    LESS_THAN       shift and go to state 62
    GREATER_OR_EQUAL shift and go to state 63
    LESS_OR_EQUAL   shift and go to state 64
    NOT_EQUAL       shift and go to state 65

  ! LESS_THAN       [ reduce using rule 19 (VAP -> VA .) ]

    S                              shift and go to state 66

state 48

    (20) VAP -> CD .

    LESS_THAN       reduce using rule 20 (VAP -> CD .)


state 49

    (21) VAP -> FR .

    LESS_THAN       reduce using rule 21 (VAP -> FR .)


state 50

    (22) FR -> TD . V ME PR MA
    (23) FR -> TD . V ME MA
    (28) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 73

state 51

    (13) GV -> TD V I VA . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 74
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 52

    (49) GF -> TD V ME PR . MA MY C RT MN BLOCK_CODE
    (51) GF -> TD V ME PR . MA MY RT MN BLOCK_CODE
    (60) MA -> . GREATER_THAN

    GREATER_THAN    shift and go to state 28

    MA                             shift and go to state 75

state 53

    (53) GF -> TD V ME MA . MY C RT MN BLOCK_CODE
    (55) GF -> TD V ME MA . MY RT MN BLOCK_CODE
    (72) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 56

    MY                             shift and go to state 76

state 54

    (50) GF -> V ME PR MA . MY C MN BLOCK_CODE
    (52) GF -> V ME PR MA . MY MN BLOCK_CODE
    (72) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 56

    MY                             shift and go to state 77

state 55

    (54) GF -> V ME MA MY . C MN BLOCK_CODE
    (56) GF -> V ME MA MY . MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (73) MN -> . LESS_OR_EQUAL
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (65) F -> . FOR

  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
    LESS_OR_EQUAL   shift and go to state 85
    SUBTRACTION     shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! LESS_OR_EQUAL   [ reduce using rule 74 (EMPTY -> .) ]

    C                              shift and go to state 78
    MN                             shift and go to state 79
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    TD                             shift and go to state 86
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 56

    (72) MY -> OPEN_BODY .

    LESS_OR_EQUAL   reduce using rule 72 (MY -> OPEN_BODY .)
    SUBTRACTION     reduce using rule 72 (MY -> OPEN_BODY .)
    INTEGER_TYPE    reduce using rule 72 (MY -> OPEN_BODY .)
    BOOLEAN_TYPE    reduce using rule 72 (MY -> OPEN_BODY .)
    DECIMAL_TYPE    reduce using rule 72 (MY -> OPEN_BODY .)
    STRING_TYPE     reduce using rule 72 (MY -> OPEN_BODY .)
    IF              reduce using rule 72 (MY -> OPEN_BODY .)
    FOR             reduce using rule 72 (MY -> OPEN_BODY .)
    RETURN          reduce using rule 72 (MY -> OPEN_BODY .)


state 57

    (35) GC -> CN PA CD PC . MY C MN BLOCK_CODE
    (36) GC -> CN PA CD PC . MY MN BLOCK_CODE
    (72) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 56

    MY                             shift and go to state 87

state 58

    (71) PC -> PARENTHESIS_CLOSE .

    OPEN_BODY       reduce using rule 71 (PC -> PARENTHESIS_CLOSE .)


state 59

    (39) CD -> V S . V
    (40) CD -> V S . VA
    (28) V -> . VARIABLE
    (30) VA -> . NUMBER
    (31) VA -> . NUMBER DOT NUMBER
    (32) VA -> . TRUE_VALUE
    (33) VA -> . FALSE_VALUE
    (34) VA -> . QUOTATION_MARKS V QUOTATION_MARKS

    VARIABLE        shift and go to state 19
    NUMBER          shift and go to state 39
    TRUE_VALUE      shift and go to state 40
    FALSE_VALUE     shift and go to state 41
    QUOTATION_MARKS shift and go to state 42

    V                              shift and go to state 88
    VA                             shift and go to state 89

state 60

    (43) S -> EQUAL .

    VARIABLE        reduce using rule 43 (S -> EQUAL .)
    NUMBER          reduce using rule 43 (S -> EQUAL .)
    TRUE_VALUE      reduce using rule 43 (S -> EQUAL .)
    FALSE_VALUE     reduce using rule 43 (S -> EQUAL .)
    QUOTATION_MARKS reduce using rule 43 (S -> EQUAL .)


state 61

    (44) S -> GREATER_THAN .

    VARIABLE        reduce using rule 44 (S -> GREATER_THAN .)
    NUMBER          reduce using rule 44 (S -> GREATER_THAN .)
    TRUE_VALUE      reduce using rule 44 (S -> GREATER_THAN .)
    FALSE_VALUE     reduce using rule 44 (S -> GREATER_THAN .)
    QUOTATION_MARKS reduce using rule 44 (S -> GREATER_THAN .)


state 62

    (45) S -> LESS_THAN .

    VARIABLE        reduce using rule 45 (S -> LESS_THAN .)
    NUMBER          reduce using rule 45 (S -> LESS_THAN .)
    TRUE_VALUE      reduce using rule 45 (S -> LESS_THAN .)
    FALSE_VALUE     reduce using rule 45 (S -> LESS_THAN .)
    QUOTATION_MARKS reduce using rule 45 (S -> LESS_THAN .)


state 63

    (46) S -> GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 46 (S -> GREATER_OR_EQUAL .)
    NUMBER          reduce using rule 46 (S -> GREATER_OR_EQUAL .)
    TRUE_VALUE      reduce using rule 46 (S -> GREATER_OR_EQUAL .)
    FALSE_VALUE     reduce using rule 46 (S -> GREATER_OR_EQUAL .)
    QUOTATION_MARKS reduce using rule 46 (S -> GREATER_OR_EQUAL .)


state 64

    (47) S -> LESS_OR_EQUAL .

    VARIABLE        reduce using rule 47 (S -> LESS_OR_EQUAL .)
    NUMBER          reduce using rule 47 (S -> LESS_OR_EQUAL .)
    TRUE_VALUE      reduce using rule 47 (S -> LESS_OR_EQUAL .)
    FALSE_VALUE     reduce using rule 47 (S -> LESS_OR_EQUAL .)
    QUOTATION_MARKS reduce using rule 47 (S -> LESS_OR_EQUAL .)


state 65

    (48) S -> NOT_EQUAL .

    VARIABLE        reduce using rule 48 (S -> NOT_EQUAL .)
    NUMBER          reduce using rule 48 (S -> NOT_EQUAL .)
    TRUE_VALUE      reduce using rule 48 (S -> NOT_EQUAL .)
    FALSE_VALUE     reduce using rule 48 (S -> NOT_EQUAL .)
    QUOTATION_MARKS reduce using rule 48 (S -> NOT_EQUAL .)


state 66

    (41) CD -> VA S . V
    (42) CD -> VA S . VA
    (28) V -> . VARIABLE
    (30) VA -> . NUMBER
    (31) VA -> . NUMBER DOT NUMBER
    (32) VA -> . TRUE_VALUE
    (33) VA -> . FALSE_VALUE
    (34) VA -> . QUOTATION_MARKS V QUOTATION_MARKS

    VARIABLE        shift and go to state 19
    NUMBER          shift and go to state 39
    TRUE_VALUE      shift and go to state 40
    FALSE_VALUE     shift and go to state 41
    QUOTATION_MARKS shift and go to state 42

    VA                             shift and go to state 90
    V                              shift and go to state 91

state 67

    (31) VA -> NUMBER DOT . NUMBER

    NUMBER          shift and go to state 92


state 68

    (34) VA -> QUOTATION_MARKS V . QUOTATION_MARKS

    QUOTATION_MARKS shift and go to state 93


state 69

    (62) GCF -> F PA CDF PC . MY C MN BLOCK_CODE
    (63) GCF -> F PA CDF PC . MY MN BLOCK_CODE
    (72) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 56

    MY                             shift and go to state 94

state 70

    (66) CDF -> NUMBER SE . NUMBER SE O

    NUMBER          shift and go to state 95


state 71

    (67) SE -> PIPE .

    NUMBER          reduce using rule 67 (SE -> PIPE .)
    SUBTRACTION     reduce using rule 67 (SE -> PIPE .)
    ADDITION        reduce using rule 67 (SE -> PIPE .)


state 72

    (16) PRINT -> SUBTRACTION MA VAP ME . SUBTRACTION BLOCK_CODE

    SUBTRACTION     shift and go to state 96


state 73

    (22) FR -> TD V . ME PR MA
    (23) FR -> TD V . ME MA
    (59) ME -> . LESS_THAN

    LESS_THAN       shift and go to state 23

    ME                             shift and go to state 97

state 74

    (13) GV -> TD V I VA BLOCK_CODE .

    $end            reduce using rule 13 (GV -> TD V I VA BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 13 (GV -> TD V I VA BLOCK_CODE .)
    RETURN          reduce using rule 13 (GV -> TD V I VA BLOCK_CODE .)


state 75

    (49) GF -> TD V ME PR MA . MY C RT MN BLOCK_CODE
    (51) GF -> TD V ME PR MA . MY RT MN BLOCK_CODE
    (72) MY -> . OPEN_BODY

    OPEN_BODY       shift and go to state 56

    MY                             shift and go to state 98

state 76

    (53) GF -> TD V ME MA MY . C RT MN BLOCK_CODE
    (55) GF -> TD V ME MA MY . RT MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (61) RT -> . RETURN V
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (65) F -> . FOR

  ! shift/reduce conflict for RETURN resolved as shift
    RETURN          shift and go to state 101
    SUBTRACTION     shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! RETURN          [ reduce using rule 74 (EMPTY -> .) ]

    TD                             shift and go to state 86
    C                              shift and go to state 99
    RT                             shift and go to state 100
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 77

    (50) GF -> V ME PR MA MY . C MN BLOCK_CODE
    (52) GF -> V ME PR MA MY . MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (73) MN -> . LESS_OR_EQUAL
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (65) F -> . FOR

  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
    LESS_OR_EQUAL   shift and go to state 85
    SUBTRACTION     shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! LESS_OR_EQUAL   [ reduce using rule 74 (EMPTY -> .) ]

    C                              shift and go to state 102
    MN                             shift and go to state 103
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    TD                             shift and go to state 86
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 78

    (54) GF -> V ME MA MY C . MN BLOCK_CODE
    (73) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 85

    MN                             shift and go to state 104

state 79

    (56) GF -> V ME MA MY MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 105
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 80

    (8) C -> GV .

    LESS_OR_EQUAL   reduce using rule 8 (C -> GV .)
    RETURN          reduce using rule 8 (C -> GV .)


state 81

    (9) C -> GC .

    LESS_OR_EQUAL   reduce using rule 9 (C -> GC .)
    RETURN          reduce using rule 9 (C -> GC .)


state 82

    (10) C -> GCF .

    LESS_OR_EQUAL   reduce using rule 10 (C -> GCF .)
    RETURN          reduce using rule 10 (C -> GCF .)


state 83

    (11) C -> PRINT .

    LESS_OR_EQUAL   reduce using rule 11 (C -> PRINT .)
    RETURN          reduce using rule 11 (C -> PRINT .)


state 84

    (12) C -> EMPTY .
    (15) GV -> EMPTY .
    (37) GC -> EMPTY .
    (64) GCF -> EMPTY .
    (17) PRINT -> EMPTY .

  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 12 (C -> EMPTY .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (C -> EMPTY .)
    LESS_OR_EQUAL   reduce using rule 12 (C -> EMPTY .)
    RETURN          reduce using rule 12 (C -> EMPTY .)

  ! LESS_OR_EQUAL   [ reduce using rule 15 (GV -> EMPTY .) ]
  ! RETURN          [ reduce using rule 15 (GV -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 37 (GC -> EMPTY .) ]
  ! RETURN          [ reduce using rule 37 (GC -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 64 (GCF -> EMPTY .) ]
  ! RETURN          [ reduce using rule 64 (GCF -> EMPTY .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 17 (PRINT -> EMPTY .) ]
  ! RETURN          [ reduce using rule 17 (PRINT -> EMPTY .) ]


state 85

    (73) MN -> LESS_OR_EQUAL .

    SUBTRACTION     reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    INTEGER_TYPE    reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    BOOLEAN_TYPE    reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    DECIMAL_TYPE    reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    STRING_TYPE     reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    IF              reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    VARIABLE        reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    FOR             reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    $end            reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    LESS_OR_EQUAL   reduce using rule 73 (MN -> LESS_OR_EQUAL .)
    RETURN          reduce using rule 73 (MN -> LESS_OR_EQUAL .)


state 86

    (13) GV -> TD . V I VA BLOCK_CODE
    (14) GV -> TD . V BLOCK_CODE
    (28) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 106

state 87

    (35) GC -> CN PA CD PC MY . C MN BLOCK_CODE
    (36) GC -> CN PA CD PC MY . MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (73) MN -> . LESS_OR_EQUAL
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (65) F -> . FOR

  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
    LESS_OR_EQUAL   shift and go to state 85
    SUBTRACTION     shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! LESS_OR_EQUAL   [ reduce using rule 74 (EMPTY -> .) ]

    CN                             shift and go to state 11
    C                              shift and go to state 107
    MN                             shift and go to state 108
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    TD                             shift and go to state 86
    F                              shift and go to state 12

state 88

    (39) CD -> V S V .

    PARENTHESIS_CLOSE reduce using rule 39 (CD -> V S V .)
    LESS_THAN       reduce using rule 39 (CD -> V S V .)


state 89

    (40) CD -> V S VA .

    PARENTHESIS_CLOSE reduce using rule 40 (CD -> V S VA .)
    LESS_THAN       reduce using rule 40 (CD -> V S VA .)


state 90

    (42) CD -> VA S VA .

    PARENTHESIS_CLOSE reduce using rule 42 (CD -> VA S VA .)
    LESS_THAN       reduce using rule 42 (CD -> VA S VA .)


state 91

    (41) CD -> VA S V .

    PARENTHESIS_CLOSE reduce using rule 41 (CD -> VA S V .)
    LESS_THAN       reduce using rule 41 (CD -> VA S V .)


state 92

    (31) VA -> NUMBER DOT NUMBER .

    EQUAL           reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    GREATER_THAN    reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    LESS_THAN       reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    GREATER_OR_EQUAL reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    LESS_OR_EQUAL   reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    NOT_EQUAL       reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    SUBTRACTION     reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    INTEGER_TYPE    reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    BOOLEAN_TYPE    reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    DECIMAL_TYPE    reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    STRING_TYPE     reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    IF              reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    VARIABLE        reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    FOR             reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    $end            reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    RETURN          reduce using rule 31 (VA -> NUMBER DOT NUMBER .)
    PARENTHESIS_CLOSE reduce using rule 31 (VA -> NUMBER DOT NUMBER .)


state 93

    (34) VA -> QUOTATION_MARKS V QUOTATION_MARKS .

    EQUAL           reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    GREATER_THAN    reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    LESS_THAN       reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    GREATER_OR_EQUAL reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    LESS_OR_EQUAL   reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    NOT_EQUAL       reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    SUBTRACTION     reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    INTEGER_TYPE    reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    BOOLEAN_TYPE    reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    DECIMAL_TYPE    reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    STRING_TYPE     reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    IF              reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    VARIABLE        reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    FOR             reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    $end            reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    RETURN          reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)
    PARENTHESIS_CLOSE reduce using rule 34 (VA -> QUOTATION_MARKS V QUOTATION_MARKS .)


state 94

    (62) GCF -> F PA CDF PC MY . C MN BLOCK_CODE
    (63) GCF -> F PA CDF PC MY . MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (73) MN -> . LESS_OR_EQUAL
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (65) F -> . FOR

  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
    LESS_OR_EQUAL   shift and go to state 85
    SUBTRACTION     shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! LESS_OR_EQUAL   [ reduce using rule 74 (EMPTY -> .) ]

    F                              shift and go to state 12
    C                              shift and go to state 109
    MN                             shift and go to state 110
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    TD                             shift and go to state 86
    CN                             shift and go to state 11

state 95

    (66) CDF -> NUMBER SE NUMBER . SE O
    (67) SE -> . PIPE

    PIPE            shift and go to state 71

    SE                             shift and go to state 111

state 96

    (16) PRINT -> SUBTRACTION MA VAP ME SUBTRACTION . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    BLOCK_CODE                     shift and go to state 112
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 97

    (22) FR -> TD V ME . PR MA
    (23) FR -> TD V ME . MA
    (58) PR -> . V
    (60) MA -> . GREATER_THAN
    (28) V -> . VARIABLE

    GREATER_THAN    shift and go to state 28
    VARIABLE        shift and go to state 19

    V                              shift and go to state 33
    PR                             shift and go to state 113
    MA                             shift and go to state 114

state 98

    (49) GF -> TD V ME PR MA MY . C RT MN BLOCK_CODE
    (51) GF -> TD V ME PR MA MY . RT MN BLOCK_CODE
    (8) C -> . GV
    (9) C -> . GC
    (10) C -> . GCF
    (11) C -> . PRINT
    (12) C -> . EMPTY
    (61) RT -> . RETURN V
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (65) F -> . FOR

  ! shift/reduce conflict for RETURN resolved as shift
    RETURN          shift and go to state 101
    SUBTRACTION     shift and go to state 13
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    FOR             shift and go to state 20

  ! RETURN          [ reduce using rule 74 (EMPTY -> .) ]

    TD                             shift and go to state 86
    C                              shift and go to state 115
    RT                             shift and go to state 116
    GV                             shift and go to state 80
    GC                             shift and go to state 81
    GCF                            shift and go to state 82
    PRINT                          shift and go to state 83
    EMPTY                          shift and go to state 84
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 99

    (53) GF -> TD V ME MA MY C . RT MN BLOCK_CODE
    (61) RT -> . RETURN V

    RETURN          shift and go to state 101

    RT                             shift and go to state 117

state 100

    (55) GF -> TD V ME MA MY RT . MN BLOCK_CODE
    (73) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 85

    MN                             shift and go to state 118

state 101

    (61) RT -> RETURN . V
    (28) V -> . VARIABLE

    VARIABLE        shift and go to state 19

    V                              shift and go to state 119

state 102

    (50) GF -> V ME PR MA MY C . MN BLOCK_CODE
    (73) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 85

    MN                             shift and go to state 120

state 103

    (52) GF -> V ME PR MA MY MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 121
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 104

    (54) GF -> V ME MA MY C MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 122
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 105

    (56) GF -> V ME MA MY MN BLOCK_CODE .

    $end            reduce using rule 56 (GF -> V ME MA MY MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 56 (GF -> V ME MA MY MN BLOCK_CODE .)
    RETURN          reduce using rule 56 (GF -> V ME MA MY MN BLOCK_CODE .)


state 106

    (13) GV -> TD V . I VA BLOCK_CODE
    (14) GV -> TD V . BLOCK_CODE
    (29) I -> . ASSIGNMENT
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    ASSIGNMENT      shift and go to state 32
    SUBTRACTION     shift and go to state 13
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    I                              shift and go to state 29
    BLOCK_CODE                     shift and go to state 30
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 107

    (35) GC -> CN PA CD PC MY C . MN BLOCK_CODE
    (73) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 85

    MN                             shift and go to state 123

state 108

    (36) GC -> CN PA CD PC MY MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    CN                             shift and go to state 11
    BLOCK_CODE                     shift and go to state 124
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    F                              shift and go to state 12

state 109

    (62) GCF -> F PA CDF PC MY C . MN BLOCK_CODE
    (73) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 85

    MN                             shift and go to state 125

state 110

    (63) GCF -> F PA CDF PC MY MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    F                              shift and go to state 12
    BLOCK_CODE                     shift and go to state 126
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11

state 111

    (66) CDF -> NUMBER SE NUMBER SE . O
    (68) O -> . SUBTRACTION
    (69) O -> . ADDITION

    SUBTRACTION     shift and go to state 128
    ADDITION        shift and go to state 129

    O                              shift and go to state 127

state 112

    (16) PRINT -> SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE .

    $end            reduce using rule 16 (PRINT -> SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 16 (PRINT -> SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE .)
    RETURN          reduce using rule 16 (PRINT -> SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE .)


state 113

    (22) FR -> TD V ME PR . MA
    (60) MA -> . GREATER_THAN

    GREATER_THAN    shift and go to state 28

    MA                             shift and go to state 130

state 114

    (23) FR -> TD V ME MA .

    LESS_THAN       reduce using rule 23 (FR -> TD V ME MA .)


state 115

    (49) GF -> TD V ME PR MA MY C . RT MN BLOCK_CODE
    (61) RT -> . RETURN V

    RETURN          shift and go to state 101

    RT                             shift and go to state 131

state 116

    (51) GF -> TD V ME PR MA MY RT . MN BLOCK_CODE
    (73) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 85

    MN                             shift and go to state 132

state 117

    (53) GF -> TD V ME MA MY C RT . MN BLOCK_CODE
    (73) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 85

    MN                             shift and go to state 133

state 118

    (55) GF -> TD V ME MA MY RT MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 134
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 119

    (61) RT -> RETURN V .

    LESS_OR_EQUAL   reduce using rule 61 (RT -> RETURN V .)


state 120

    (50) GF -> V ME PR MA MY C MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 135
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 121

    (52) GF -> V ME PR MA MY MN BLOCK_CODE .

    $end            reduce using rule 52 (GF -> V ME PR MA MY MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 52 (GF -> V ME PR MA MY MN BLOCK_CODE .)
    RETURN          reduce using rule 52 (GF -> V ME PR MA MY MN BLOCK_CODE .)


state 122

    (54) GF -> V ME MA MY C MN BLOCK_CODE .

    $end            reduce using rule 54 (GF -> V ME MA MY C MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 54 (GF -> V ME MA MY C MN BLOCK_CODE .)
    RETURN          reduce using rule 54 (GF -> V ME MA MY C MN BLOCK_CODE .)


state 123

    (35) GC -> CN PA CD PC MY C MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    CN                             shift and go to state 11
    BLOCK_CODE                     shift and go to state 136
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    F                              shift and go to state 12

state 124

    (36) GC -> CN PA CD PC MY MN BLOCK_CODE .

    $end            reduce using rule 36 (GC -> CN PA CD PC MY MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 36 (GC -> CN PA CD PC MY MN BLOCK_CODE .)
    RETURN          reduce using rule 36 (GC -> CN PA CD PC MY MN BLOCK_CODE .)


state 125

    (62) GCF -> F PA CDF PC MY C MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    F                              shift and go to state 12
    BLOCK_CODE                     shift and go to state 137
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    TD                             shift and go to state 9
    V                              shift and go to state 10
    CN                             shift and go to state 11

state 126

    (63) GCF -> F PA CDF PC MY MN BLOCK_CODE .

    $end            reduce using rule 63 (GCF -> F PA CDF PC MY MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 63 (GCF -> F PA CDF PC MY MN BLOCK_CODE .)
    RETURN          reduce using rule 63 (GCF -> F PA CDF PC MY MN BLOCK_CODE .)


state 127

    (66) CDF -> NUMBER SE NUMBER SE O .

    PARENTHESIS_CLOSE reduce using rule 66 (CDF -> NUMBER SE NUMBER SE O .)


state 128

    (68) O -> SUBTRACTION .

    PARENTHESIS_CLOSE reduce using rule 68 (O -> SUBTRACTION .)


state 129

    (69) O -> ADDITION .

    PARENTHESIS_CLOSE reduce using rule 69 (O -> ADDITION .)


state 130

    (22) FR -> TD V ME PR MA .

    LESS_THAN       reduce using rule 22 (FR -> TD V ME PR MA .)


state 131

    (49) GF -> TD V ME PR MA MY C RT . MN BLOCK_CODE
    (73) MN -> . LESS_OR_EQUAL

    LESS_OR_EQUAL   shift and go to state 85

    MN                             shift and go to state 138

state 132

    (51) GF -> TD V ME PR MA MY RT MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 139
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 133

    (53) GF -> TD V ME MA MY C RT MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 140
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 134

    (55) GF -> TD V ME MA MY RT MN BLOCK_CODE .

    $end            reduce using rule 55 (GF -> TD V ME MA MY RT MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 55 (GF -> TD V ME MA MY RT MN BLOCK_CODE .)
    RETURN          reduce using rule 55 (GF -> TD V ME MA MY RT MN BLOCK_CODE .)


state 135

    (50) GF -> V ME PR MA MY C MN BLOCK_CODE .

    $end            reduce using rule 50 (GF -> V ME PR MA MY C MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 50 (GF -> V ME PR MA MY C MN BLOCK_CODE .)
    RETURN          reduce using rule 50 (GF -> V ME PR MA MY C MN BLOCK_CODE .)


state 136

    (35) GC -> CN PA CD PC MY C MN BLOCK_CODE .

    $end            reduce using rule 35 (GC -> CN PA CD PC MY C MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 35 (GC -> CN PA CD PC MY C MN BLOCK_CODE .)
    RETURN          reduce using rule 35 (GC -> CN PA CD PC MY C MN BLOCK_CODE .)


state 137

    (62) GCF -> F PA CDF PC MY C MN BLOCK_CODE .

    $end            reduce using rule 62 (GCF -> F PA CDF PC MY C MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 62 (GCF -> F PA CDF PC MY C MN BLOCK_CODE .)
    RETURN          reduce using rule 62 (GCF -> F PA CDF PC MY C MN BLOCK_CODE .)


state 138

    (49) GF -> TD V ME PR MA MY C RT MN . BLOCK_CODE
    (2) BLOCK_CODE -> . GV
    (3) BLOCK_CODE -> . GC
    (4) BLOCK_CODE -> . GF
    (5) BLOCK_CODE -> . GCF
    (6) BLOCK_CODE -> . PRINT
    (7) BLOCK_CODE -> . EMPTY
    (13) GV -> . TD V I VA BLOCK_CODE
    (14) GV -> . TD V BLOCK_CODE
    (15) GV -> . EMPTY
    (35) GC -> . CN PA CD PC MY C MN BLOCK_CODE
    (36) GC -> . CN PA CD PC MY MN BLOCK_CODE
    (37) GC -> . EMPTY
    (49) GF -> . TD V ME PR MA MY C RT MN BLOCK_CODE
    (50) GF -> . V ME PR MA MY C MN BLOCK_CODE
    (51) GF -> . TD V ME PR MA MY RT MN BLOCK_CODE
    (52) GF -> . V ME PR MA MY MN BLOCK_CODE
    (53) GF -> . TD V ME MA MY C RT MN BLOCK_CODE
    (54) GF -> . V ME MA MY C MN BLOCK_CODE
    (55) GF -> . TD V ME MA MY RT MN BLOCK_CODE
    (56) GF -> . V ME MA MY MN BLOCK_CODE
    (57) GF -> . EMPTY
    (62) GCF -> . F PA CDF PC MY C MN BLOCK_CODE
    (63) GCF -> . F PA CDF PC MY MN BLOCK_CODE
    (64) GCF -> . EMPTY
    (16) PRINT -> . SUBTRACTION MA VAP ME SUBTRACTION BLOCK_CODE
    (17) PRINT -> . EMPTY
    (74) EMPTY -> .
    (24) TD -> . INTEGER_TYPE
    (25) TD -> . BOOLEAN_TYPE
    (26) TD -> . DECIMAL_TYPE
    (27) TD -> . STRING_TYPE
    (38) CN -> . IF
    (28) V -> . VARIABLE
    (65) F -> . FOR

    SUBTRACTION     shift and go to state 13
    $end            reduce using rule 74 (EMPTY -> .)
    LESS_OR_EQUAL   reduce using rule 74 (EMPTY -> .)
    RETURN          reduce using rule 74 (EMPTY -> .)
    INTEGER_TYPE    shift and go to state 14
    BOOLEAN_TYPE    shift and go to state 15
    DECIMAL_TYPE    shift and go to state 16
    STRING_TYPE     shift and go to state 17
    IF              shift and go to state 18
    VARIABLE        shift and go to state 19
    FOR             shift and go to state 20

    TD                             shift and go to state 9
    V                              shift and go to state 10
    BLOCK_CODE                     shift and go to state 141
    GV                             shift and go to state 3
    GC                             shift and go to state 4
    GF                             shift and go to state 5
    GCF                            shift and go to state 6
    PRINT                          shift and go to state 7
    EMPTY                          shift and go to state 8
    CN                             shift and go to state 11
    F                              shift and go to state 12

state 139

    (51) GF -> TD V ME PR MA MY RT MN BLOCK_CODE .

    $end            reduce using rule 51 (GF -> TD V ME PR MA MY RT MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 51 (GF -> TD V ME PR MA MY RT MN BLOCK_CODE .)
    RETURN          reduce using rule 51 (GF -> TD V ME PR MA MY RT MN BLOCK_CODE .)


state 140

    (53) GF -> TD V ME MA MY C RT MN BLOCK_CODE .

    $end            reduce using rule 53 (GF -> TD V ME MA MY C RT MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 53 (GF -> TD V ME MA MY C RT MN BLOCK_CODE .)
    RETURN          reduce using rule 53 (GF -> TD V ME MA MY C RT MN BLOCK_CODE .)


state 141

    (49) GF -> TD V ME PR MA MY C RT MN BLOCK_CODE .

    $end            reduce using rule 49 (GF -> TD V ME PR MA MY C RT MN BLOCK_CODE .)
    LESS_OR_EQUAL   reduce using rule 49 (GF -> TD V ME PR MA MY C RT MN BLOCK_CODE .)
    RETURN          reduce using rule 49 (GF -> TD V ME PR MA MY C RT MN BLOCK_CODE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LESS_THAN in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 47 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 98 resolved as shift
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (GV -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (GC -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (GF -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (GCF -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (BLOCK_CODE -> EMPTY)
WARNING: rejected rule (PRINT -> EMPTY) in state 8
WARNING: reduce/reduce conflict in state 84 resolved using rule (C -> EMPTY)
WARNING: rejected rule (GV -> EMPTY) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (C -> EMPTY)
WARNING: rejected rule (GC -> EMPTY) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (C -> EMPTY)
WARNING: rejected rule (GCF -> EMPTY) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (C -> EMPTY)
WARNING: rejected rule (PRINT -> EMPTY) in state 84
WARNING: Rule (GV -> EMPTY) is never reduced
WARNING: Rule (GC -> EMPTY) is never reduced
WARNING: Rule (GF -> EMPTY) is never reduced
WARNING: Rule (GCF -> EMPTY) is never reduced
WARNING: Rule (PRINT -> EMPTY) is never reduced
